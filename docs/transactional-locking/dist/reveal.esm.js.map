{"version":3,"file":"reveal.esm.js","sources":["../js/utils/constants.js","../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}","const UA = navigator.userAgent;\nconst testElement = document.createElement( 'div' );\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );\n\n// Flags if we should use zoom instead of transform to scale\n// up slides. Zoom produces crisper results but has a lot of\n// xbrowser quirks so we only use it in whitelisted browsers.\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { HORIZONTAL_SLIDES_SELECTOR, VERTICAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, closest } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t}).join( ',' );\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the given slide,\n\t * if there are any.\n\t */\n\tlayout( slide ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( slide.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Home  ,  Shift &#8592;']        = 'First slide';\n\t\tthis.shortcuts['End  ,  Shift &#8594;']         = 'Last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist specific modified + keycode combinations\n\t\tlet prevSlideShortcut = event.shiftKey && event.keyCode === 32;\n\t\tlet firstSlideShortcut = event.shiftKey && keyCode === 37;\n\t\tlet lastSlideShortcut = event.shiftKey && keyCode === 39;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!prevSlideShortcut && !firstSlideShortcut && !lastSlideShortcut &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( firstSlideShortcut ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( lastSlideShortcut ) {\n\t\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet indices = this.Reveal.getIndices();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\tlet hash = window.location.hash;\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet bits = hash.slice( 2 ).split( '/' ),\n\t\t\tname = hash.replace( /#\\/?/gi, '' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\t// Ensure that we're not already on a slide with the same name\n\t\t\tlet isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute( 'id' ) === name : false;\n\n\t\t\tif( element ) {\n\t\t\t\t// If the slide exists and is not the current slide...\n\t\t\t\tif ( !isSameNameAsCurrentSlide || typeof f !== 'undefined' ) {\n\t\t\t\t\t// ...find the position of the named slide and navigate to it\n\t\t\t\t\tlet slideIndices = this.Reveal.getIndices( element );\n\t\t\t\t\tthis.Reveal.slide( slideIndices.h, slideIndices.v, f );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If the slide doesn't exist, navigate to the current slide\n\t\t\telse {\n\t\t\t\tthis.Reveal.slide( indices.h || 0, indices.v || 0 );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( h !== indices.h || v !== indices.v || f !== undefined ) {\n\t\t\t\tthis.Reveal.slide( h, v, f );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.history.replaceState( null, null, '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Re-run the slide layout so that r-fit-text is applied based on\n\t\t// the printed slide size\n\t\tslides.forEach( slide => this.Reveal.slideContent.layout( slide ) );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\n\t\t\t\tif( doingSlideNumbers ) {\n\t\t\t\t\tconst slideNumber = index + 1;\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing and \n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.1.3';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2020 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', event => {\n\t\t\t\tlet data = event.data;\n\n\t\t\t\t// Make sure we're dealing with JSON\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\t\t\tdata = JSON.parse( data );\n\n\t\t\t\t\t// Check if the requested method can be found\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Zoom Scaling\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\n\t\t\t\t\t// effects are minor differences in text layout and iframe\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\n\t\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t\t}\n\t\t\t\t\t// Transform Scaling\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\n\t\t\t\t\t// high scale values on ldpi screens.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [o] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, o ) {\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin: o\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft() {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight() {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp() {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown() {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\tif( previousSlide ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext() {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown();\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight();\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","UA","navigator","userAgent","testElement","isMobile","test","platform","maxTouchPoints","isChrome","isAndroid","supportsZoom","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","toArray","nl","slice","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","destroy","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","newbie","push","init","unfreeze","freeze","undefined","window","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","encodeURI","trim","join","isSpeakerNotes","video","muted","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","substr","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","prevSlideShortcut","firstSlideShortcut","lastSlideShortcut","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","left","Number","MAX_VALUE","right","up","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","onWindowHashChange","readURL","hash","bits","name","getElementById","decodeURIComponent","error","isSameNameAsCurrentSlide","slideIndices","hashIndexBase","hashOneBasedIndex","history","replaceState","pathname","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","Date","now","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Print","doingSlideNumbers","pageWidth","pageHeight","body","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","JSON","parse","args","dispatchPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","parent","self","message","namespace","getState","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","devicePixelRatio","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","o","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","origin","syncSlide","beforeSlide","random","slidesLength","printMode","reverse","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":";;;;;;;AACO,MAKMA,EAAgC,yEAGhCC,EAAuB,uGCFvBC,EAAS,CAAEC,EAAGC,SAErB,IAAIC,KAAKD,EACbD,EAAGE,GAAMD,EAAGC,UAGNF,GAOKG,EAAW,CAAEC,EAAIC,IAEtBC,MAAMC,KAAMH,EAAGI,iBAAkBH,IAO5BI,EAAc,CAAEL,EAAIM,EAAWC,KACvCA,EACHP,EAAGQ,UAAUC,IAAKH,GAGlBN,EAAGQ,UAAUE,OAAQJ,IAUVK,EAAgBJ,OAEP,iBAAVA,EAAqB,IACjB,SAAVA,EAAmB,OAAO,KACzB,GAAc,SAAVA,EAAmB,OAAO,EAC9B,GAAc,UAAVA,EAAoB,OAAO,EAC/B,GAAIA,EAAMK,MAAO,eAAkB,OAAOC,WAAYN,UAGrDA,GA4BKO,EAAmB,CAAEC,EAASC,KAE1CD,EAAQE,MAAMD,UAAYA,GAadE,EAAU,CAAEC,EAAQlB,SAE5BmB,EAAgBD,EAAOD,SAAWC,EAAOE,iBAAmBF,EAAOG,2BAE5DF,IAAiBA,EAAcG,KAAMJ,EAAQlB,KAe5CuB,EAAU,CAAEL,EAAQlB,QAGF,mBAAnBkB,EAAOK,eACVL,EAAOK,QAASvB,QAIjBkB,GAAS,IACXD,EAASC,EAAQlB,UACbkB,EAIRA,EAASA,EAAOM,kBAGV,MAuCKC,EAAsB,CAAEC,EAAWC,EAASC,EAAWC,EAAU,UAGzEC,EAAQJ,EAAUvB,iBAAkB,IAAMyB,OAIzC,IAAI/B,EAAI,EAAGA,EAAIiC,EAAMC,OAAQlC,IAAM,KACnCmC,EAAWF,EAAMjC,MACjBmC,EAASR,aAAeE,SACpBM,MAKLC,EAAOC,SAASC,cAAeR,UACnCM,EAAK5B,UAAYuB,EACjBK,EAAKJ,UAAYA,EACjBH,EAAUU,YAAaH,GAEhBA,GASKI,EAAqB/B,QAE7BgC,EAAMJ,SAASC,cAAe,gBAClCG,EAAIC,KAAO,WAEPjC,GAASA,EAAMyB,OAAS,IACvBO,EAAIE,WACPF,EAAIE,WAAWC,QAAUnC,EAGzBgC,EAAIF,YAAaF,SAASQ,eAAgBpC,KAI5C4B,SAASS,KAAKP,YAAaE,GAEpBA,GAOKM,EAAe,SAEvBC,EAAQ,GAEZC,SAASC,OAAOC,QAAS,4BAA4BrD,IACpDkD,EAAOlD,EAAEsD,MAAO,KAAMC,SAAYvD,EAAEsD,MAAO,KAAME,aAI7C,IAAItD,KAAKgD,EAAQ,KACjBvC,EAAQuC,EAAOhD,GAEnBgD,EAAOhD,GAAMa,EAAa0C,SAAU9C,gBAKA,IAA1BuC,EAAK,qBAA0CA,EAAK,aAExDA,GAaKQ,EAAqB,CAAEvC,EAASwC,EAAS,QAEjDxC,EAAU,KACTyC,EAAWC,EAAY1C,EAAQE,MAAMsC,cAIzCxC,EAAQE,MAAMsC,OAAS,MAIvBxC,EAAQU,WAAWR,MAAMsC,OAAS,OAElCC,EAAYD,EAASxC,EAAQU,WAAWiC,aAGxC3C,EAAQE,MAAMsC,OAASE,EAAY,KAGnC1C,EAAQU,WAAWR,MAAM0C,eAAe,UAEjCH,SAGDD,GCvRFK,EAAKC,UAAUC,UACfC,EAAc5B,SAASC,cAAe,OAE/B4B,EAAW,+BAA+BC,KAAML,IAC9B,aAAvBC,UAAUK,UAA2BL,UAAUM,eAAiB,EAE3DC,EAAW,UAAUH,KAAML,KAAS,QAAQK,KAAML,GAElDS,EAAY,YAAYJ,KAAML,GAK9BU,EAAe,SAAUP,EAAY9C,QAAU+C,IACtDI,GAAY,2BAA2BH,KAAML,aCRnDW,OAAOC,eAAeC,EAAS,aAAc,CAC3ClE,OAAO,IAGT,IAAImE,EAAWH,OAAOI,QAAU,SAAUxD,GAAU,IAAK,IAAIrB,EAAI,EAAGA,EAAI8E,UAAU5C,OAAQlC,IAAK,CAAE,IAAI+E,EAASD,UAAU9E,GAAI,IAAK,IAAIgF,KAAOD,EAAcN,OAAOQ,UAAUC,eAAezD,KAAKsD,EAAQC,KAAQ3D,EAAO2D,GAAOD,EAAOC,IAAY,OAAO3D,eAErO,SAAU8D,GAG1B,GAAKA,EAAL,CAGA,IAAIC,EAAU,SAAiBC,GAC7B,MAAO,GAAGC,MAAM7D,KAAK4D,IAInBE,EACI,EADJA,EAEa,EAFbA,EAGY,EAHZA,EAIK,EAILC,EAAU,GAGVC,EAAc,KACdC,EAAgB,0BAA2BP,EAAI,WACjDA,EAAEQ,qBAAqBF,GACvBA,EAAcN,EAAES,uBAAsB,WACpC,OAAOC,EAAOL,EAAQM,QAAO,SAAUC,GACrC,OAAOA,EAAEC,OAASD,EAAEE,eAGtB,aAGAC,EAAY,SAAmBxD,GACjC,OAAO,WACL8C,EAAQW,SAAQ,SAAUJ,GACxB,OAAOA,EAAEC,MAAQtD,KAEnBgD,MAKAG,EAAS,SAAgBL,GAK3BA,EAAQM,QAAO,SAAUC,GACvB,OAAQA,EAAEK,iBACTD,SAAQ,SAAUJ,GACnBA,EAAEK,cAAgBC,EAAaN,MAIjCP,EAAQM,OAAOQ,GAAgBH,QAAQI,GAGvC,IAAIC,EAAkBhB,EAAQM,OAAOW,GAGrCD,EAAgBL,QAAQO,GAGxBF,EAAgBL,SAAQ,SAAUJ,GAChCQ,EAAWR,GACXY,EAAYZ,MAIdS,EAAgBL,QAAQS,IAGtBD,EAAc,SAAqBZ,GACrC,OAAOA,EAAEC,MAAQT,GAGfmB,EAAkB,SAAyBX,GAG7CA,EAAEc,eAAiBd,EAAE9E,QAAQU,WAAWmF,YAGxCf,EAAEgB,aAAehB,EAAE9E,QAAQ+F,YAG3BjB,EAAEkB,iBAAmBlB,EAAEmB,gBAGvBnB,EAAEmB,gBAAkBC,KAAKC,IAAID,KAAKE,IAAItB,EAAEuB,QAASvB,EAAEc,eAAiBd,EAAEgB,aAAehB,EAAEkB,kBAAmBlB,EAAEwB,SAG5GxB,EAAEyB,WAAazB,EAAE0B,WAAa1B,EAAEmB,kBAAoBnB,EAAEuB,QAAU,SAAW,UAIzEb,EAAe,SAAsBV,GACvC,OAAOA,EAAEC,QAAUT,GAA0BQ,EAAEC,QAAUT,GAA0BQ,EAAE9E,QAAQU,WAAWmF,cAAgBf,EAAEc,gBAIxHR,EAAe,SAAsBN,GAGvC,IAAI5E,EAAQgE,EAAEuC,iBAAiB3B,EAAE9E,QAAS,MAG1C8E,EAAEmB,gBAAkBnG,WAAWI,EAAMwG,iBAAiB,cAGtD5B,EAAE6B,QAAUzG,EAAMwG,iBAAiB,WACnC5B,EAAEyB,WAAarG,EAAMwG,iBAAiB,gBAIpCrB,EAAiB,SAAwBP,GAE3C,IAAI8B,GAAW,EAGf,OAAI9B,EAAE+B,wBAGD,UAAU3D,KAAK4B,EAAE6B,WACpBC,GAAW,EACX9B,EAAE6B,QAAU,gBAIO,WAAjB7B,EAAEyB,aACJK,GAAW,EACX9B,EAAEyB,WAAa,UAIjBzB,EAAE+B,uBAAwB,EAEnBD,IAILtB,EAAa,SAAoBR,GACnCA,EAAE9E,QAAQE,MAAMqG,WAAazB,EAAEyB,WAC/BzB,EAAE9E,QAAQE,MAAMyG,QAAU7B,EAAE6B,QAC5B7B,EAAE9E,QAAQE,MAAM4G,SAAWhC,EAAEmB,gBAAkB,MAI7CN,EAAmB,SAA0Bb,GAC/CA,EAAE9E,QAAQ+G,cAAc,IAAIC,YAAY,MAAO,CAC7CC,OAAQ,CACNC,SAAUpC,EAAEkB,iBACZmB,SAAUrC,EAAEmB,gBACZmB,YAAatC,EAAEmB,gBAAkBnB,EAAEkB,sBAMrCqB,EAAM,SAAavC,EAAGrD,GACxB,OAAO,WACLqD,EAAEC,MAAQtD,EACLqD,EAAEE,QACPP,MA0BA6C,EAAU,SAAiBxC,GAC7B,OAAO,WAGLP,EAAUA,EAAQM,QAAO,SAAU0C,GACjC,OAAOA,EAAEvH,UAAY8E,EAAE9E,WAIrB8E,EAAE0C,kBAAkB1C,EAAE2C,SAASC,aAGnC5C,EAAE9E,QAAQE,MAAMqG,WAAazB,EAAE6C,cAAcpB,WAC7CzB,EAAE9E,QAAQE,MAAMyG,QAAU7B,EAAE6C,cAAchB,QAC1C7B,EAAE9E,QAAQE,MAAM4G,SAAWhC,EAAE6C,cAAcb,WAK3Cc,EAAY,SAAmB9C,GACjC,OAAO,WACDA,EAAEE,SACNF,EAAEE,QAAS,EACXP,OAKAoD,EAAc,SAAqB/C,GACrC,OAAO,WACL,OAAOA,EAAEE,QAAS,IAIlBwC,EAAmB,SAA0B1C,GAG1CA,EAAE0C,mBAGP1C,EAAE2C,SAAW,IAAIK,iBAAiBT,EAAIvC,EAAGR,IAGzCQ,EAAE2C,SAASM,QAAQjD,EAAE9E,QAAS8E,EAAE0C,oBAW9BQ,EAAiB,CACnB3B,QAAS,GACTC,QAAS,IACTE,WAAW,EACXgB,iBAAkB,qBAAsBtD,GAXL,CACnC+D,SAAS,EACTC,WAAW,EACXC,eAAe,IAgEbC,EAAiB,KACjBC,EAAkB,WACpBnE,EAAEoE,aAAaF,GACfA,EAAiBlE,EAAEqE,WAAWtD,EAAUX,GAAyBkE,EAAMC,qBAIrEC,EAAS,CAAC,SAAU,qBAkBxB,OAjBAlF,OAAOC,eAAe+E,EAAO,gBAAiB,CAC5CG,IAAK,SAAaC,GAChB,IAAIC,GAAUD,EAAU,MAAQ,UAAY,gBAC5CF,EAAOxD,SAAQ,SAAU4D,GACvB5E,EAAE2E,GAAQC,EAAGT,SAMnBG,EAAMO,eAAgB,EACtBP,EAAMC,mBAAqB,IAG3BD,EAAMQ,OAAS/D,EAAUX,GAGlBkE,EA7EP,SAASS,EAAYC,EAAUC,GAG7B,IAAIC,EAAezF,EAAS,GAAIqE,EAAgBmB,GAG5CE,EAAgBH,EAASI,KAAI,SAAUtJ,GAGzC,IAAI8E,EAAInB,EAAS,GAAIyF,EAAc,CAGjCpJ,QAASA,EACTgF,QAAQ,IAOV,OAxGO,SAAcF,GAGvBA,EAAE6C,cAAgB,CAChBpB,WAAYzB,EAAE9E,QAAQE,MAAMqG,WAC5BI,QAAS7B,EAAE9E,QAAQE,MAAMyG,QACzBG,SAAUhC,EAAE9E,QAAQE,MAAM4G,UAI5BU,EAAiB1C,GAGjBA,EAAEyE,QAAS,EAGXzE,EAAEC,OAAQ,EAGVR,EAAQiF,KAAK1E,GAkFX2E,CAAK3E,GAGE,CACL9E,QAASA,EACTqH,IAAKA,EAAIvC,EAAGR,GACZoF,SAAU9B,EAAU9C,GACpB6E,OAAQ9B,EAAY/C,GACpB+C,YAAaP,EAAQxC,OAQzB,OAHAL,IAGO4E,EAIT,SAASb,EAAMpI,GACb,IAAI+I,EAAUtF,UAAU5C,OAAS,QAAsB2I,IAAjB/F,UAAU,GAAmBA,UAAU,GAAK,GAIlF,MAAyB,iBAAXzD,EAGd6I,EAAY9E,EAAQ/C,SAAS/B,iBAAiBe,IAAU+I,GAGxDF,EAAY,CAAC7I,GAAS+I,GAAS,IA3SjB,CAyUE,oBAAXU,OAAyB,KAAOA,QC3U1B,MAAMC,EAEpBC,YAAaC,QAEPA,OAASA,OAETC,oBAAsBC,KAAKD,oBAAoBE,KAAMD,MAU3DE,cAAepK,OAGVqK,EAAUH,KAAKF,OAAOM,YAAYC,qBAIf,kBAAZF,IACVA,EAAUrK,EAAQwK,aAAc,iBAG1BH,EAURI,KAAMC,EAAOvB,EAAU,IAGtBuB,EAAMxK,MAAMyG,QAAUuD,KAAKF,OAAOM,YAAY3D,QAG9C3H,EAAU0L,EAAO,qEAAsExF,SAASlF,KACvE,WAApBA,EAAQ2K,SAAwBT,KAAKE,cAAepK,MACvDA,EAAQ4K,aAAc,MAAO5K,EAAQ6K,aAAc,aACnD7K,EAAQ4K,aAAc,mBAAoB,IAC1C5K,EAAQ8K,gBAAiB,gBAK3B9L,EAAU0L,EAAO,gBAAiBxF,SAAS6F,QACtCC,EAAU,EAEdhM,EAAU+L,EAAO,oBAAqB7F,SAASpB,IAC9CA,EAAO8G,aAAc,MAAO9G,EAAO+G,aAAc,aACjD/G,EAAOgH,gBAAiB,YACxBhH,EAAO8G,aAAc,mBAAoB,IACzCI,GAAW,KAIR/H,GAA8B,UAAlB8H,EAAMJ,SACrBI,EAAMH,aAAc,cAAe,IAKhCI,EAAU,GACbD,EAAMN,cAMJQ,EAAaP,EAAMQ,0BACnBD,EAAa,CAChBA,EAAW/K,MAAMyG,QAAU,YAEvBwE,EAAoBT,EAAMU,8BAC1BC,EAAmBX,EAAMG,aAAc,8BAGM,IAA7CI,EAAWT,aAAc,eAA4B,CACxDS,EAAWL,aAAc,cAAe,YAEpCU,EAAkBZ,EAAMG,aAAc,yBACzCU,EAAkBb,EAAMG,aAAc,yBACtCW,EAAsBd,EAAMF,aAAc,8BAC1CiB,EAAuBf,EAAMF,aAAc,kCAGxCc,EACHH,EAAkBjL,MAAMoL,gBAAkBA,EAAgBnJ,MAAO,KAAMmH,KAAK2B,GACnE,OAAMS,UAAUT,EAAWU,aACjCC,KAAM,UAGL,GAAKL,IAAoBrB,KAAKF,OAAO6B,iBAAmB,KACxDC,EAAQ1K,SAASC,cAAe,SAEhCmK,GACHM,EAAMlB,aAAc,OAAQ,IAGzBa,IACHK,EAAMC,OAAQ,GAQX9I,IACH6I,EAAMC,OAAQ,EACdD,EAAMlB,aAAc,cAAe,KAIpCW,EAAgBpJ,MAAO,KAAM+C,SAASpB,IACrCgI,EAAM/K,WAAa,gBAAiB+C,EAAQ,QAG7CqH,EAAkB7J,YAAawK,QAG3B,GAAIT,IAA+C,IAA3BlC,EAAQ6C,eAA0B,KAC1DC,EAAS7K,SAASC,cAAe,UACrC4K,EAAOrB,aAAc,kBAAmB,IACxCqB,EAAOrB,aAAc,qBAAsB,IAC3CqB,EAAOrB,aAAc,wBAAyB,IAC9CqB,EAAOrB,aAAc,QAAS,YAE9BqB,EAAOrB,aAAc,WAAYS,GAEjCY,EAAO/L,MAAMgM,MAAS,OACtBD,EAAO/L,MAAMsC,OAAS,OACtByJ,EAAO/L,MAAMiM,UAAY,OACzBF,EAAO/L,MAAMkM,SAAW,OAExBjB,EAAkB7J,YAAa2K,QAK7BI,EAA0BlB,EAAkBmB,cAAe,oBAC3DD,GAGCnC,KAAKE,cAAea,KAAiB,0BAA0B/H,KAAMmI,IACpEgB,EAAwBxB,aAAc,SAAYQ,GACrDgB,EAAwBzB,aAAc,MAAOS,QAQ5CkB,OAAQ7B,GAQd6B,OAAQ7B,GAKPvL,MAAMC,KAAMsL,EAAMrL,iBAAkB,gBAAkB6F,SAASlF,IAC9DwI,EAAOxI,EAAS,CACfqG,QAAS,GACTC,QAA0C,GAAjC4D,KAAKF,OAAOM,YAAY9H,OACjCgF,kBAAkB,EAClBuB,eAAe,OAYlByD,OAAQ9B,GAGPA,EAAMxK,MAAMyG,QAAU,WAGlBsE,EAAaf,KAAKF,OAAOyC,mBAAoB/B,GAC7CO,IACHA,EAAW/K,MAAMyG,QAAU,OAG3B3H,EAAUiM,EAAY,eAAgB/F,SAASlF,IAC9CA,EAAQ8K,gBAAiB,WAK3B9L,EAAU0L,EAAO,6FAA8FxF,SAASlF,IACvHA,EAAQ4K,aAAc,WAAY5K,EAAQ6K,aAAc,QACxD7K,EAAQ8K,gBAAiB,UAI1B9L,EAAU0L,EAAO,0DAA2DxF,SAASpB,IACpFA,EAAO8G,aAAc,WAAY9G,EAAO+G,aAAc,QACtD/G,EAAOgH,gBAAiB,UAQ1B4B,4BAEKC,EAA6B,CAAEC,EAAiBC,EAAWC,KAC9D9N,EAAUkL,KAAKF,OAAO+C,mBAAoB,UAAWH,EAAiB,MAAOC,EAAW,MAAO3H,SAASjG,QACnG+N,EAAM/N,EAAG4L,aAAc+B,GACvBI,IAAiC,IAA1BA,EAAIC,QAASH,IACvB7N,EAAG2L,aAAcgC,EAAiBI,GAAS,KAAK9J,KAAM8J,GAAc,IAAN,KAAcF,OAM/EH,EAA4B,MAAO,qBAAsB,iBACzDA,EAA4B,WAAY,qBAAsB,iBAG9DA,EAA4B,MAAO,oBAAqB,SACxDA,EAA4B,WAAY,oBAAqB,SAU9DO,qBAAsBlN,GAEjBA,IAAYkK,KAAKF,OAAO6B,mBAG3B7M,EAAUgB,EAAS,oBAAqBkF,SAASjG,IAGhDA,EAAG2L,aAAc,MAAO3L,EAAG4L,aAAc,WAI1C7L,EAAUgB,EAAS,gBAAiBkF,SAASjG,OACxCwB,EAASxB,EAAI,eAAkBwB,EAASxB,EAAI,gCAK5CkO,EAAWjD,KAAKF,OAAOM,YAAY8C,iBAIf,kBAAbD,IACVA,EAAWlO,EAAGuL,aAAc,oBAAuB/J,EAASxB,EAAI,sBAG7DkO,GAA+B,mBAAZlO,EAAGoO,QAGrBpO,EAAGqO,WAAa,OACdC,mBAAoB,CAAEnN,OAAQnB,SAI/B,GAAIgE,EAAW,KACfuK,EAAUvO,EAAGoO,OAIbG,GAAoC,mBAAlBA,EAAQC,QAAwC,IAAhBxO,EAAGyO,UACxDF,EAAQC,OAAO,KACdxO,EAAGyO,UAAW,EAGdzO,EAAG0O,iBAAkB,QAAQ,KAC5B1O,EAAGyO,UAAW,aAOjBzO,EAAG2O,oBAAqB,aAAc1D,KAAKqD,oBAC3CtO,EAAG0O,iBAAkB,aAAczD,KAAKqD,uBAO3CvO,EAAUgB,EAAS,eAAgBkF,SAASjG,IACvCwB,EAASxB,EAAI,eAAkBwB,EAASxB,EAAI,2BAI3CgL,oBAAqB,CAAE7J,OAAQnB,OAIrCD,EAAUgB,EAAS,oBAAqBkF,SAASjG,IAC5CwB,EAASxB,EAAI,eAAkBwB,EAASxB,EAAI,sBAI5CA,EAAG4L,aAAc,SAAY5L,EAAG4L,aAAc,cACjD5L,EAAG2O,oBAAqB,OAAQ1D,KAAKD,qBACrChL,EAAG0O,iBAAkB,OAAQzD,KAAKD,qBAClChL,EAAG2L,aAAc,MAAO3L,EAAG4L,aAAc,kBAc7C0C,mBAAoBM,OAEfC,IAAoBrN,EAASoN,EAAMzN,OAAQ,QAC9C2N,IAAiBtN,EAASoN,EAAMzN,OAAQ,YAErC0N,GAAmBC,IACtBF,EAAMzN,OAAO4N,YAAc,EAC3BH,EAAMzN,OAAOiN,QAGdQ,EAAMzN,OAAOwN,oBAAqB,aAAc1D,KAAKqD,oBAUtDtD,oBAAqB4D,OAEhB5B,EAAS4B,EAAMzN,UAEf6L,GAAUA,EAAOgC,cAAgB,KAEhCH,IAAoBrN,EAASoN,EAAMzN,OAAQ,QAC9C2N,IAAiBtN,EAASoN,EAAMzN,OAAQ,eAErC0N,GAAmBC,EAAY,KAG9BZ,EAAWjD,KAAKF,OAAOM,YAAY8C,cAIf,kBAAbD,IACVA,EAAWlB,EAAOzB,aAAc,oBAAuB/J,EAASwL,EAAQ,sBAIrE,wBAAwB/I,KAAM+I,EAAOpB,aAAc,SAAasC,EACnElB,EAAOgC,cAAcC,YAAa,mDAAoD,KAG9E,uBAAuBhL,KAAM+I,EAAOpB,aAAc,SAAasC,EACvElB,EAAOgC,cAAcC,YAAa,oBAAqB,KAIvDjC,EAAOgC,cAAcC,YAAa,cAAe,OAerDC,oBAAqBnO,EAASmJ,EAAU,IAEvCA,EAAUvK,EAAQ,CAEjBwP,eAAe,GACbjF,GAECnJ,GAAWA,EAAQU,aAEtB1B,EAAUgB,EAAS,gBAAiBkF,SAASjG,IACvCA,EAAGuL,aAAc,gBAAuC,mBAAbvL,EAAGoP,QAClDpP,EAAG2L,aAAa,wBAAyB,IACzC3L,EAAGoP,YAKLrP,EAAUgB,EAAS,UAAWkF,SAASjG,IAClCA,EAAGgP,eAAgBhP,EAAGgP,cAAcC,YAAa,aAAc,KACnEjP,EAAG2O,oBAAqB,OAAQ1D,KAAKD,wBAItCjL,EAAUgB,EAAS,qCAAsCkF,SAASjG,KAC5DA,EAAGuL,aAAc,gBAAmBvL,EAAGgP,eAAyD,mBAAjChP,EAAGgP,cAAcC,aACpFjP,EAAGgP,cAAcC,YAAa,oDAAqD,QAKrFlP,EAAUgB,EAAS,oCAAqCkF,SAASjG,KAC3DA,EAAGuL,aAAc,gBAAmBvL,EAAGgP,eAAyD,mBAAjChP,EAAGgP,cAAcC,aACpFjP,EAAGgP,cAAcC,YAAa,qBAAsB,SAIxB,IAA1B/E,EAAQiF,eAEXpP,EAAUgB,EAAS,oBAAqBkF,SAASjG,IAGhDA,EAAG2L,aAAc,MAAO,eACxB3L,EAAG6L,gBAAiB,YCxcV,MAAMwD,EAEpBvE,YAAaC,QAEPA,OAASA,EAIfuE,cAEMvO,QAAUoB,SAASC,cAAe,YAClCrB,QAAQT,UAAY,oBACpByK,OAAOwE,mBAAmBlN,YAAa4I,KAAKlK,SAOlDyO,UAAWC,EAAQC,OAEdC,EAAqB,OACrBF,EAAOG,cAAgB3E,KAAKF,OAAO8E,kBACP,QAA3BJ,EAAOK,iBAGyB,YAA3BL,EAAOK,iBAAiC7E,KAAKF,OAAO6B,oBAF5D+C,EAAqB,cAOlB5O,QAAQE,MAAMyG,QAAUiI,EAO9BI,SAGK9E,KAAKF,OAAOM,YAAYuE,aAAe3E,KAAKlK,eAC1CA,QAAQe,UAAYmJ,KAAK+E,kBAShCA,eAAgBvE,EAAQR,KAAKF,OAAOkF,uBAG/B1P,EADAkP,EAASxE,KAAKF,OAAOM,YAErB6E,EAAS,SAEsB,mBAAvBT,EAAOG,YAClBrP,EAAQkP,EAAOG,YAAanE,OACtB,CAE4B,iBAAvBgE,EAAOG,cACjBM,EAAST,EAAOG,aAKZ,IAAI3L,KAAMiM,IAAyD,IAA7CjF,KAAKF,OAAOoF,sBAAsBnO,SAC5DkO,EAAS,SAINE,EAAmB3E,GAAsC,cAA7BA,EAAM4E,QAAQC,WAA6B,EAAI,SAE/E/P,EAAQ,GACA2P,OACF,IACJ3P,EAAMgK,KAAMU,KAAKF,OAAOwF,kBAAmB9E,GAAU2E,aAEjD,MACJ7P,EAAMgK,KAAMU,KAAKF,OAAOwF,kBAAmB9E,GAAU2E,EAAkB,IAAKnF,KAAKF,OAAOyF,oCAGpFC,EAAUxF,KAAKF,OAAO2F,WAAYjF,GACtClL,EAAMgK,KAAMkG,EAAQE,EAAIP,OACpBQ,EAAiB,QAAXV,EAAmB,IAAM,IAC/BjF,KAAKF,OAAO8F,gBAAiBpF,IAAUlL,EAAMgK,KAAMqG,EAAKH,EAAQK,EAAI,QAIvEC,EAAM,IAAM9F,KAAKF,OAAOhI,SAASiO,QAASvF,UACvCR,KAAKgG,aAAc1Q,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIwQ,GAczDE,aAAcrR,EAAGsR,EAAWrR,EAAGkR,EAAM,IAAM9F,KAAKF,OAAOhI,SAASiO,iBAE9C,iBAANnR,GAAmBsR,MAAOtR,GAQ5B,YAAWkR,+CACcnR,2BARxB,YAAWmR,+CACanR,4DACQsR,oDACRrR,4BCnG7B,MAAMuR,EAAeC,QAEvBC,EAAOD,EAAMzQ,MAAO,wBACpB0Q,GAAQA,EAAK,UAChBA,EAAOA,EAAK,GACL,CACNC,EAAsC,GAAnCC,SAAUF,EAAKG,OAAQ,GAAK,IAC/BC,EAAsC,GAAnCF,SAAUF,EAAKG,OAAQ,GAAK,IAC/B5R,EAAsC,GAAnC2R,SAAUF,EAAKG,OAAQ,GAAK,SAI7BE,EAAON,EAAMzQ,MAAO,wBACpB+Q,GAAQA,EAAK,UAChBA,EAAOA,EAAK,GACL,CACNJ,EAAGC,SAAUG,EAAKC,OAAQ,EAAG,GAAK,IAClCF,EAAGF,SAAUG,EAAKC,OAAQ,EAAG,GAAK,IAClC/R,EAAG2R,SAAUG,EAAKC,OAAQ,EAAG,GAAK,SAIhCC,EAAMR,EAAMzQ,MAAO,uDACnBiR,QACI,CACNN,EAAGC,SAAUK,EAAI,GAAI,IACrBH,EAAGF,SAAUK,EAAI,GAAI,IACrBhS,EAAG2R,SAAUK,EAAI,GAAI,SAInBC,EAAOT,EAAMzQ,MAAO,uFACpBkR,EACI,CACNP,EAAGC,SAAUM,EAAK,GAAI,IACtBJ,EAAGF,SAAUM,EAAK,GAAI,IACtBjS,EAAG2R,SAAUM,EAAK,GAAI,IACtBlS,EAAGiB,WAAYiR,EAAK,KAIf,MClDO,MAAMC,EAEpBjH,YAAaC,QAEPA,OAASA,EAIfuE,cAEMvO,QAAUoB,SAASC,cAAe,YAClCrB,QAAQT,UAAY,mBACpByK,OAAOwE,mBAAmBlN,YAAa4I,KAAKlK,SASlDiR,cAGMjR,QAAQe,UAAY,QACpBf,QAAQP,UAAUC,IAAK,sBAGvBsK,OAAOoF,sBAAsBlK,SAASgM,QAEtCC,EAAkBjH,KAAKkH,iBAAkBF,EAAQhH,KAAKlK,SAG1DhB,EAAUkS,EAAQ,WAAYhM,SAASmM,SAEjCD,iBAAkBC,EAAQF,GAE/BA,EAAgB1R,UAAUC,IAAK,eAO7BwK,KAAKF,OAAOM,YAAYgH,8BAEtBtR,QAAQE,MAAMoL,gBAAkB,QAAUpB,KAAKF,OAAOM,YAAYgH,wBAA0B,UAC5FtR,QAAQE,MAAMqR,eAAiBrH,KAAKF,OAAOM,YAAYkH,4BACvDxR,QAAQE,MAAMuR,iBAAmBvH,KAAKF,OAAOM,YAAYoH,8BACzD1R,QAAQE,MAAMyR,mBAAqBzH,KAAKF,OAAOM,YAAYsH,2BAMhErJ,YAAY,UACNyB,OAAOwE,mBAAmB/O,UAAUC,IAAK,6BAC5C,UAKEM,QAAQE,MAAMoL,gBAAkB,QAChCtB,OAAOwE,mBAAmB/O,UAAUE,OAAQ,4BAcnDyR,iBAAkB1G,EAAO9J,OAGpBZ,EAAUoB,SAASC,cAAe,OACtCrB,EAAQT,UAAY,oBAAsBmL,EAAMnL,UAAU2C,QAAS,sBAAuB,QAGtF2P,EAAiBzQ,SAASC,cAAe,cAC7CwQ,EAAetS,UAAY,2BAE3BS,EAAQsB,YAAauQ,GACrBjR,EAAUU,YAAatB,GAEvB0K,EAAMQ,uBAAyBlL,EAC/B0K,EAAMU,8BAAgCyG,OAGjCC,KAAMpH,GAEJ1K,EAUR8R,KAAMpH,SAEC1K,EAAU0K,EAAMQ,uBACrB2G,EAAiBnH,EAAMU,8BAElB2G,EAAO,CACZ9G,WAAYP,EAAMG,aAAc,mBAChC0G,eAAgB7G,EAAMG,aAAc,wBACpCS,gBAAiBZ,EAAMG,aAAc,yBACrCU,gBAAiBb,EAAMG,aAAc,yBACrCQ,iBAAkBX,EAAMG,aAAc,0BACtCmH,gBAAiBtH,EAAMG,aAAc,yBACrC4G,iBAAkB/G,EAAMG,aAAc,0BACtC8G,mBAAoBjH,EAAMG,aAAc,4BACxCoH,qBAAsBvH,EAAMG,aAAc,8BAC1CqH,kBAAmBxH,EAAMG,aAAc,4BAGlCsH,EAAczH,EAAMF,aAAc,gBAIxCE,EAAMjL,UAAUE,OAAQ,uBACxB+K,EAAMjL,UAAUE,OAAQ,wBAExBK,EAAQ8K,gBAAiB,eACzB9K,EAAQ8K,gBAAiB,wBACzB9K,EAAQ8K,gBAAiB,wBACzB9K,EAAQ8K,gBAAiB,8BACzB9K,EAAQE,MAAM8R,gBAAkB,GAEhCH,EAAe3R,MAAMqR,eAAiB,GACtCM,EAAe3R,MAAMuR,iBAAmB,GACxCI,EAAe3R,MAAMyR,mBAAqB,GAC1CE,EAAe3R,MAAMoL,gBAAkB,GACvCuG,EAAe3R,MAAMkS,QAAU,GAC/BP,EAAe9Q,UAAY,GAEvBgR,EAAK9G,aAEJ,sBAAsB/H,KAAM6O,EAAK9G,aAAgB,2CAA2C/H,KAAM6O,EAAK9G,YAC1GP,EAAME,aAAc,wBAAyBmH,EAAK9G,YAGlDjL,EAAQE,MAAM+K,WAAa8G,EAAK9G,aAO9B8G,EAAK9G,YAAc8G,EAAKC,iBAAmBD,EAAKzG,iBAAmByG,EAAKxG,iBAAmBwG,EAAK1G,mBACnGrL,EAAQ4K,aAAc,uBAAwBmH,EAAK9G,WACvC8G,EAAKR,eACLQ,EAAKzG,gBACLyG,EAAKxG,gBACLwG,EAAK1G,iBACL0G,EAAKC,gBACLD,EAAKN,iBACLM,EAAKJ,mBACLI,EAAKE,qBACLF,EAAKG,mBAIdH,EAAKR,gBAAiBvR,EAAQ4K,aAAc,uBAAwBmH,EAAKR,gBACzEQ,EAAKC,kBAAkBhS,EAAQE,MAAM8R,gBAAkBD,EAAKC,iBAC5DD,EAAKE,sBAAuBjS,EAAQ4K,aAAc,6BAA8BmH,EAAKE,sBAErFE,GAAcnS,EAAQ4K,aAAc,eAAgB,IAGpDmH,EAAKR,iBAAiBM,EAAe3R,MAAMqR,eAAiBQ,EAAKR,gBACjEQ,EAAKN,mBAAmBI,EAAe3R,MAAMuR,iBAAmBM,EAAKN,kBACrEM,EAAKJ,qBAAqBE,EAAe3R,MAAMyR,mBAAqBI,EAAKJ,oBACzEI,EAAKG,oBAAoBL,EAAe3R,MAAMkS,QAAUL,EAAKG,uBAK7DG,EAAgBN,EAAKC,oBAGpBK,IAAkBhC,EAAYgC,GAAkB,KAChDC,EAA0BzI,OAAOpD,iBAAkBzG,GACnDsS,GAA2BA,EAAwBN,kBACtDK,EAAgBC,EAAwBN,oBAItCK,EAAgB,OACbvB,EAAMT,EAAYgC,GAKpBvB,GAAiB,IAAVA,EAAIjS,ID5II,iBAFWyR,EC+IR+B,KD7IQ/B,EAAQD,EAAYC,KAEhDA,GACgB,IAAVA,EAAME,EAAoB,IAAVF,EAAMK,EAAoB,IAAVL,EAAMxR,GAAY,IAGrD,MCuImC,IACtC4L,EAAMjL,UAAUC,IAAK,uBAGrBgL,EAAMjL,UAAUC,IAAK,yBDnJO4Q,IAAAA,ECiKhCtB,OAAQuD,GAAa,OAEhBC,EAAetI,KAAKF,OAAOkF,kBAC3BQ,EAAUxF,KAAKF,OAAO2F,aAEtB8C,EAAoB,KAGpBC,EAAiBxI,KAAKF,OAAOM,YAAYqI,IAAM,SAAW,OAC7DC,EAAmB1I,KAAKF,OAAOM,YAAYqI,IAAM,OAAS,YAI3DxT,MAAMC,KAAM8K,KAAKlK,QAAQ6S,YAAa3N,SAAS,CAAE4N,EAAalD,KAE7DkD,EAAYrT,UAAUE,OAAQ,OAAQ,UAAW,UAE7CiQ,EAAIF,EAAQE,EACfkD,EAAYrT,UAAUC,IAAKgT,GAElB9C,EAAIF,EAAQE,EACrBkD,EAAYrT,UAAUC,IAAKkT,IAG3BE,EAAYrT,UAAUC,IAAK,WAG3B+S,EAAoBK,IAGjBP,GAAc3C,IAAMF,EAAQE,IAC/B5Q,EAAU8T,EAAa,qBAAsB5N,SAAS,CAAE6N,EAAahD,KAEpEgD,EAAYtT,UAAUE,OAAQ,OAAQ,UAAW,UAE7CoQ,EAAIL,EAAQK,EACfgD,EAAYtT,UAAUC,IAAK,QAElBqQ,EAAIL,EAAQK,EACrBgD,EAAYtT,UAAUC,IAAK,WAG3BqT,EAAYtT,UAAUC,IAAK,WAGvBkQ,IAAMF,EAAQE,IAAI6C,EAAoBM,UAS1C7I,KAAK8I,yBAEHhJ,OAAOiJ,aAAa9E,oBAAqBjE,KAAK8I,mBAAoB,CAAE5E,eAAgBlE,KAAKF,OAAOiJ,aAAa7I,cAAeF,KAAK8I,sBAKnIP,EAAoB,MAElBzI,OAAOiJ,aAAa/F,qBAAsBuF,OAE3CS,EAA2BT,EAAkBnG,cAAe,gCAC5D4G,EAA2B,KAE1BC,EAAqBD,EAAyBhT,MAAMoL,iBAAmB,GAGvE,SAASpI,KAAMiQ,KAClBD,EAAyBhT,MAAMoL,gBAAkB,GACjDzB,OAAOpD,iBAAkByM,GAA2Bd,QACpDc,EAAyBhT,MAAMoL,gBAAkB6H,OAO/CC,EAAyBlJ,KAAK8I,mBAAqB9I,KAAK8I,mBAAmBnI,aAAc,wBAA2B,KACpHwI,EAAwBZ,EAAkB5H,aAAc,wBACxDwI,GAAyBA,IAA0BD,GAA0BX,IAAsBvI,KAAK8I,yBACtGhT,QAAQP,UAAUC,IAAK,sBAGxBsT,mBAAqBP,EAMvBD,IACD,uBAAwB,uBAAwBtN,SAASoO,IACtDd,EAAa/S,UAAU8T,SAAUD,QAC/BtJ,OAAOwE,mBAAmB/O,UAAUC,IAAK4T,QAGzCtJ,OAAOwE,mBAAmB/O,UAAUE,OAAQ2T,KAEhDpJ,MAIJ3B,YAAY,UACNvI,QAAQP,UAAUE,OAAQ,mBAC7B,GAQJ6T,qBAEK9D,EAAUxF,KAAKF,OAAO2F,gBAEtBzF,KAAKF,OAAOM,YAAYgH,wBAA0B,KAMpDmC,EAAiBC,EAJdC,EAAmBzJ,KAAKF,OAAOoF,sBAClCwE,EAAiB1J,KAAKF,OAAO6J,oBAE1BtC,EAAiBrH,KAAKlK,QAAQE,MAAMqR,eAAepP,MAAO,KAGhC,IAA1BoP,EAAetQ,OAClBwS,EAAkBC,EAAmBjD,SAAUc,EAAe,GAAI,KAGlEkC,EAAkBhD,SAAUc,EAAe,GAAI,IAC/CmC,EAAmBjD,SAAUc,EAAe,GAAI,SAKhDuC,EACAzE,EAHG0E,EAAa7J,KAAKlK,QAAQgU,YAC7BC,EAAuBN,EAAiB1S,OAKxC6S,EADmE,iBAAzD5J,KAAKF,OAAOM,YAAY4J,6BACLhK,KAAKF,OAAOM,YAAY4J,6BAGxBD,EAAuB,GAAMR,EAAkBM,IAAiBE,EAAqB,GAAM,EAGzH5E,EAAmByE,EAA6BpE,EAAQE,GAAK,MAI5DuE,EACAC,EAHGC,EAAcnK,KAAKlK,QAAQ2C,aAC9B2R,EAAqBV,EAAe3S,OAKpCkT,EADiE,iBAAvDjK,KAAKF,OAAOM,YAAYiK,2BACPrK,KAAKF,OAAOM,YAAYiK,4BAGtBb,EAAmBW,IAAkBC,EAAmB,GAGtFF,EAAiBE,EAAqB,EAAKH,EAA2BzE,EAAQK,EAAI,OAE7E/P,QAAQE,MAAMyR,mBAAqBtC,EAAmB,OAAS+E,EAAiB,OClYxF,IAAII,EAAqB,EAMV,MAAMC,EAEpB1K,YAAaC,QAEPA,OAASA,EAUf0K,IAAKC,EAAWC,QAGVC,YAEDC,EAAY5K,KAAKF,OAAO+K,YACxBC,EAAeF,EAAU7H,QAAS2H,GAClCK,EAAiBH,EAAU7H,QAAS0H,MAKpCA,EAAUnK,aAAc,sBAAyBoK,EAAQpK,aAAc,sBACtEmK,EAAU9J,aAAc,0BAA6B+J,EAAQ/J,aAAc,2BACxEmK,EAAeC,EAAiBL,EAAUD,GAAYnK,aAAc,6BAAgC,MAGtG0K,sBAAwBhL,KAAKgL,uBAAyB3T,QAEvD4T,EAAmBjL,KAAKkL,sBAAuBR,GAGnDD,EAAUrF,QAAQ+F,YAAc,UAChCT,EAAQtF,QAAQ+F,YAAc,UAG9BF,EAAiBG,eAAiBN,EAAeC,EAAiB,UAAY,eAG1EM,EAAMrL,KAAKsL,0BAA2Bb,EAAWC,GAAUtL,KAAKJ,GAC5DgB,KAAKuL,oBAAqBvM,EAAS9J,KAAM8J,EAASwM,GAAIxM,EAASC,SAAW,GAAIgM,EAAkBX,UAI3D,UAAzCI,EAAQtF,QAAQqG,uBAAqF,IAAjDzL,KAAKF,OAAOM,YAAYqL,qBAAgC,KAG3GC,EAAuD,GAA5BT,EAAiBU,SAC/CC,EAAoD,GAA5BX,EAAiBU,cAErCE,gCAAiCnB,GAAU1P,SAAS8Q,QAEpDC,EAAmB/L,KAAKkL,sBAAuBY,EAAkBb,GACjEe,EAAK,YAILD,EAAiBJ,WAAaV,EAAiBU,UAAYI,EAAiBE,QAAUhB,EAAiBgB,QAC1GD,EAAK,aAAe1B,IACpBe,EAAI/L,KAAO,4DAA2D0M,6BAA8BD,EAAiBJ,kBAAkBI,EAAiBE,cAGzJH,EAAiB1G,QAAQ8G,kBAAoBF,IAE3ChM,MAGHqL,EAAI/L,KAAO,8FAA6FoM,WAAkCE,cAOtIZ,sBAAsBnU,UAAYwU,EAAI3J,KAAM,IAGjDjH,uBAAuB,KAClBuF,KAAKgL,wBAERzO,iBAAkByD,KAAKgL,uBAAwBmB,WAE/CzB,EAAQtF,QAAQ+F,YAAc,mBAI3BrL,OAAOjD,cAAc,CACzBtF,KAAM,cACNsQ,KAAM,CACL4C,UAAAA,EACAC,QAAAA,EACA0B,MAAOpM,KAAKgL,0BAYhBL,QAGC7V,EAAUkL,KAAKF,OAAOwE,mBAAoB,mDAAoDtJ,SAASlF,IACtGA,EAAQsP,QAAQ+F,YAAc,MAI/BrW,EAAUkL,KAAKF,OAAOwE,mBAAoB,8BAA+BtJ,SAASlF,WAC1EA,EAAQsP,QAAQ8G,qBAIpBlM,KAAKgL,uBAAyBhL,KAAKgL,sBAAsBxU,kBACvDwU,sBAAsBxU,WAAW6V,YAAarM,KAAKgL,4BACnDA,sBAAwB,MAiB/BO,oBAAqBrW,EAAMsW,EAAIc,EAAgBrB,EAAkBe,GAIhE9W,EAAKkQ,QAAQ8G,kBAAoB,GACjCV,EAAGpG,QAAQ8G,kBAAoBF,MAI3B/M,EAAUe,KAAKkL,sBAAuBM,EAAIP,QAIV,IAAzBqB,EAAeL,QAAwBhN,EAAQgN,MAAQK,EAAeL,YAC1C,IAA5BK,EAAeX,WAA2B1M,EAAQ0M,SAAWW,EAAeX,eAClD,IAA1BW,EAAeC,SAAyBtN,EAAQsN,OAASD,EAAeC,YAE/EC,EAAYxM,KAAKyM,4BAA6B,OAAQvX,EAAMoX,GAC/DI,EAAU1M,KAAKyM,4BAA6B,KAAMjB,EAAIc,MAKnDd,EAAGjW,UAAU8T,SAAU,qBAInBqD,EAAQC,OAAR,QAEHzX,EAAKK,UAAU8T,SAAU,aAAe,EAEjBnU,EAAKG,UAAUM,MAAOlB,IAA0B,CAAC,KAAM,MACzD+W,EAAGnW,UAAUM,MAAOlB,IAA0B,CAAC,KAAM,IAII,YAApCwW,EAAiBG,gBAC7DI,EAAGjW,UAAUC,IAAK,UAAW,gBAUC,IAA7B8W,EAAeM,YAAgD,IAAzBN,EAAeO,MAAkB,KAEtEC,EAAoB9M,KAAKF,OAAOiN,WAEhCC,EAAQ,CACXC,GAAKT,EAAUS,EAAIP,EAAQO,GAAMH,EACjCI,GAAKV,EAAUU,EAAIR,EAAQQ,GAAMJ,EACjCK,OAAQX,EAAUxK,MAAQ0K,EAAQ1K,MAClCoL,OAAQZ,EAAUlU,OAASoU,EAAQpU,QAIpC0U,EAAMC,EAAIjR,KAAKqR,MAAiB,IAAVL,EAAMC,GAAa,IACzCD,EAAME,EAAIlR,KAAKqR,MAAiB,IAAVL,EAAME,GAAa,IACzCF,EAAMG,OAASnR,KAAKqR,MAAsB,IAAfL,EAAMG,QAAkB,IACnDH,EAAMG,OAASnR,KAAKqR,MAAsB,IAAfL,EAAMG,QAAkB,QAE/CP,GAAyC,IAA7BN,EAAeM,YAAqC,IAAZI,EAAMC,GAAuB,IAAZD,EAAME,GAC9EL,GAAiC,IAAzBP,EAAeO,QAAsC,IAAjBG,EAAMG,QAAiC,IAAjBH,EAAMI,WAGrER,GAAaC,EAAQ,KAEpB9W,EAAY,GAEZ6W,GAAY7W,EAAUuJ,KAAO,aAAY0N,EAAMC,QAAQD,EAAME,QAC7DL,GAAQ9W,EAAUuJ,KAAO,SAAQ0N,EAAMG,WAAWH,EAAMI,WAE5DZ,EAAUG,OAAV,UAAgC5W,EAAU2L,KAAM,KAChD8K,EAAUG,OAAO,oBAAsB,WAEvCD,EAAQC,OAAR,UAA8B,YAO3B,IAAIW,KAAgBZ,EAAQC,OAAS,OACnCY,EAAUb,EAAQC,OAAOW,GACzBE,EAAYhB,EAAUG,OAAOW,GAE/BC,IAAYC,SACRd,EAAQC,OAAOW,KAKQ,IAA1BC,EAAQE,gBACXf,EAAQC,OAAOW,GAAgBC,EAAQjY,QAGR,IAA5BkY,EAAUC,gBACbjB,EAAUG,OAAOW,GAAgBE,EAAUlY,YAK1C+V,EAAM,GAENqC,EAAoBpU,OAAOqU,KAAMjB,EAAQC,WAIzCe,EAAkB3W,OAAS,EAAI,CAGlCyV,EAAUG,OAAV,WAAiC,OAGjCD,EAAQC,OAAR,WAAgC,OAAM1N,EAAQ0M,aAAa1M,EAAQsN,UAAUtN,EAAQgN,SACrFS,EAAQC,OAAO,uBAAyBe,EAAkBhM,KAAM,MAChEgL,EAAQC,OAAO,eAAiBe,EAAkBhM,KAAM,MAYxD2J,EAAO,8BAA+BW,EAAI,OAR5B1S,OAAOqU,KAAMnB,EAAUG,QAASvN,KAAKkO,GAC3CA,EAAe,KAAOd,EAAUG,OAAOW,GAAgB,iBAC3D5L,KAAM,IAMH,6DACwDsK,EAAI,OALvD1S,OAAOqU,KAAMjB,EAAQC,QAASvN,KAAKkO,GACvCA,EAAe,KAAOZ,EAAQC,OAAOW,GAAgB,iBACzD5L,KAAM,IAGwE,WAI5E2J,EAYRH,sBAAuBpV,EAAS8X,OAE3B3O,EAAU,CACbsN,OAAQvM,KAAKF,OAAOM,YAAYyN,kBAChClC,SAAU3L,KAAKF,OAAOM,YAAY0N,oBAClC7B,MAAO,MAGRhN,EAAUvK,EAAQuK,EAAS2O,GAGvB9X,EAAQU,WAAa,KACpBuX,EAAqBxX,EAAST,EAAQU,WAAY,8BAClDuX,IACH9O,EAAUe,KAAKkL,sBAAuB6C,EAAoB9O,WAIxDnJ,EAAQsP,QAAQyI,oBACnB5O,EAAQsN,OAASzW,EAAQsP,QAAQyI,mBAG9B/X,EAAQsP,QAAQ0I,sBACnB7O,EAAQ0M,SAAW/V,WAAYE,EAAQsP,QAAQ0I,sBAG5ChY,EAAQsP,QAAQ4I,mBACnB/O,EAAQgN,MAAQrW,WAAYE,EAAQsP,QAAQ4I,mBAGtC/O,EAWRwN,4BAA6BwB,EAAWnY,EAASwW,OAE5C9H,EAASxE,KAAKF,OAAOM,YAErB8N,EAAa,CAAEvB,OAAQ,QAGM,IAA7BL,EAAeM,YAAgD,IAAzBN,EAAeO,MAAkB,KACtEsB,KAIkC,mBAA3B7B,EAAe8B,QACzBD,EAAS7B,EAAe8B,QAAStY,WAG7B0O,EAAO6J,OAGVF,EAASrY,EAAQwY,4BAEb,KACAzB,EAAQ7M,KAAKF,OAAOiN,WACxBoB,EAAS,CACRlB,EAAGnX,EAAQyY,WAAa1B,EACxBK,EAAGpX,EAAQ0Y,UAAY3B,EACvB7K,MAAOlM,EAAQgU,YAAc+C,EAC7BvU,OAAQxC,EAAQ2C,aAAeoU,GAKlCqB,EAAWjB,EAAIkB,EAAOlB,EACtBiB,EAAWhB,EAAIiB,EAAOjB,EACtBgB,EAAWlM,MAAQmM,EAAOnM,MAC1BkM,EAAW5V,OAAS6V,EAAO7V,aAGtBmW,EAAiBlS,iBAAkBzG,UAGvCwW,EAAeK,QAAUnI,EAAOkK,mBAAoB1T,SAAShF,QAC1DV,EAIiB,iBAAVU,IAAqBA,EAAQ,CAAE2Y,SAAU3Y,IAGnDV,OADyB,IAAfU,EAAMd,MAAsC,SAAd+Y,EAChC,CAAE3Y,MAAOU,EAAMd,KAAMuY,eAAe,QAEhB,IAAbzX,EAAMwV,IAAoC,OAAdyC,EACnC,CAAE3Y,MAAOU,EAAMwV,GAAIiC,eAAe,GAGlCgB,EAAezY,EAAM2Y,UAGhB,KAAVrZ,IACH4Y,EAAWvB,OAAO3W,EAAM2Y,UAAYrZ,MAI/B4Y,EAeR5C,0BAA2Bb,EAAWC,OAIjCkE,GAFgE,mBAA/C5O,KAAKF,OAAOM,YAAYyO,mBAAoC7O,KAAKF,OAAOM,YAAYyO,mBAAqB7O,KAAK8O,qBAE/GxY,KAAM0J,KAAMyK,EAAWC,GAEvCqE,EAAW,UAGRH,EAAMjU,QAAQ,CAAEqU,EAAMC,SACS,IAAjCF,EAAShM,QAASiM,EAAKxD,WAC1BuD,EAASzP,KAAM0P,EAAKxD,KACb,KAYVsD,oBAAqBrE,EAAWC,OAE3BkE,EAAQ,SAGNM,EAAY,4CAIbC,uBAAwBP,EAAOnE,EAAWC,EAAS,aAAazT,GAC7DA,EAAKmY,SAAW,MAAQnY,EAAK0J,aAAc,kBAI9CwO,uBAAwBP,EAAOnE,EAAWC,EAASwE,GAAWjY,GAC3DA,EAAKmY,SAAW,MAAQnY,EAAKoY,iBAIhCF,uBAAwBP,EAAOnE,EAAWC,EAb5B,sBAaiDzT,GAC5DA,EAAKmY,SAAW,OAAUnY,EAAK0J,aAAc,QAAW1J,EAAK0J,aAAc,oBAI9EwO,uBAAwBP,EAAOnE,EAAWC,EApB7B,OAoBiDzT,GAC3DA,EAAKmY,SAAW,MAAQnY,EAAKoY,YAGrCT,EAAM5T,SAASgU,IAIV/Y,EAAS+Y,EAAK9Z,KAAMga,GACvBF,EAAK/P,QAAU,CAAE4N,OAAO,GAGhB5W,EAAS+Y,EAAK9Z,KAhCN,SAoChB8Z,EAAK/P,QAAU,CAAE4N,OAAO,EAAOF,OAAQ,CAAE,QAAS,gBAG7CwC,uBAAwBP,EAAOI,EAAK9Z,KAAM8Z,EAAKxD,GAAI,uBAAuBvU,GACvEA,EAAKqY,aACV,CACFzC,OAAO,EACPF,OAAQ,GACRyB,QAASpO,KAAKuP,oBAAoBtP,KAAMD,aAIpCmP,uBAAwBP,EAAOI,EAAK9Z,KAAM8Z,EAAKxD,GAAI,yCAAyCvU,GACzFA,EAAK0J,aAAc,qBACxB,CACFkM,OAAO,EACPF,OAAQ,CAAE,SACVyB,QAASpO,KAAKuP,oBAAoBtP,KAAMD,WAKxCA,MAEI4O,EAWRW,oBAAqBzZ,SAEdgX,EAAoB9M,KAAKF,OAAOiN,iBAE/B,CACNE,EAAGjR,KAAKqR,MAASvX,EAAQyY,WAAazB,EAAsB,KAAQ,IACpEI,EAAGlR,KAAKqR,MAASvX,EAAQ0Y,UAAY1B,EAAsB,KAAQ,IACnE9K,MAAOhG,KAAKqR,MAASvX,EAAQgU,YAAcgD,EAAsB,KAAQ,IACzExU,OAAQ0D,KAAKqR,MAASvX,EAAQ2C,aAAeqU,EAAsB,KAAQ,KAgB7EqC,uBAAwBP,EAAOY,EAAWC,EAASza,EAAU0a,EAAYzE,OAEpE0E,EAAc,GACdC,EAAY,MAEbzV,MAAM7D,KAAMkZ,EAAUra,iBAAkBH,IAAagG,SAAS,CAAElF,EAASjB,WACrEgF,EAAM6V,EAAY5Z,GACL,iBAAR+D,GAAoBA,EAAI9C,SAClC4Y,EAAY9V,GAAO8V,EAAY9V,IAAQ,GACvC8V,EAAY9V,GAAKyF,KAAMxJ,UAItBqE,MAAM7D,KAAMmZ,EAAQta,iBAAkBH,IAAagG,SAAS,CAAElF,EAASjB,WACnEgF,EAAM6V,EAAY5Z,OAIpB+Z,KAHJD,EAAU/V,GAAO+V,EAAU/V,IAAQ,GACnC+V,EAAU/V,GAAKyF,KAAMxJ,GAKjB6Z,EAAY9V,GAAO,OAChBiW,EAAcF,EAAU/V,GAAK9C,OAAS,EACtCgZ,EAAiBJ,EAAY9V,GAAK9C,OAAS,EAI7C4Y,EAAY9V,GAAMiW,IACrBD,EAAcF,EAAY9V,GAAMiW,GAChCH,EAAY9V,GAAMiW,GAAgB,MAI1BH,EAAY9V,GAAMkW,KAC1BF,EAAcF,EAAY9V,GAAMkW,GAChCJ,EAAY9V,GAAMkW,GAAmB,MAKnCF,GACHjB,EAAMtP,KAAK,CACVpK,KAAM2a,EACNrE,GAAI1V,EACJmJ,QAASgM,OAmBbY,gCAAiCmE,SAEzB,GAAG7V,MAAM7D,KAAM0Z,EAAYC,UAAWC,QAAQ,CAAEC,EAAQra,WAExDsa,EAA2Bta,EAAQsM,cAAe,qCAKnDtM,EAAQwK,aAAc,6BAAiC8P,GAC3DD,EAAO7Q,KAAMxJ,GAGVA,EAAQsM,cAAe,gCAC1B+N,EAASA,EAAOE,OAAQrQ,KAAK6L,gCAAiC/V,KAGxDqa,IAEL,KCtmBU,MAAMG,EAEpBzQ,YAAaC,QAEPA,OAASA,EAOfyE,UAAWC,EAAQC,IAEO,IAArBD,EAAO+L,eACLC,WAE2B,IAAxB/L,EAAU8L,gBACbE,SASPD,UAEC1b,EAAUkL,KAAKF,OAAO+C,mBAAoB,aAAc7H,SAASlF,IAChEA,EAAQP,UAAUC,IAAK,WACvBM,EAAQP,UAAUE,OAAQ,uBAS5Bgb,SAEC3b,EAAUkL,KAAKF,OAAO+C,mBAAoB,aAAc7H,SAASlF,IAChEA,EAAQP,UAAUE,OAAQ,WAC1BK,EAAQP,UAAUE,OAAQ,uBAW5Bib,sBAEKpI,EAAetI,KAAKF,OAAOkF,qBAC3BsD,GAAgBtI,KAAKF,OAAOM,YAAYmQ,UAAY,KACnDA,EAAYjI,EAAanT,iBAAkB,4BAC3Cwb,EAAkBrI,EAAanT,iBAAkB,gDAE9C,CACNyb,KAAML,EAAUxZ,OAAS4Z,EAAgB5Z,OAAS,EAClD8Z,OAAQF,EAAgB5Z,cAIlB,CAAE6Z,MAAM,EAAOC,MAAM,GAwB9BC,KAAMP,EAAWQ,GAAU,GAE1BR,EAAYtb,MAAMC,KAAMqb,OAEpBS,EAAU,GACbC,EAAY,GACZC,EAAS,GAGVX,EAAUvV,SAASmW,OACdA,EAAS7Q,aAAc,uBAA0B,KAChD2O,EAAQ1I,SAAU4K,EAASxQ,aAAc,uBAAyB,IAEjEqQ,EAAQ/B,KACZ+B,EAAQ/B,GAAS,IAGlB+B,EAAQ/B,GAAO3P,KAAM6R,QAGrBF,EAAU3R,KAAM,CAAE6R,OAMpBH,EAAUA,EAAQX,OAAQY,OAItBhC,EAAQ,SAIZ+B,EAAQhW,SAASoW,IAChBA,EAAMpW,SAASmW,IACdD,EAAO5R,KAAM6R,GACbA,EAASzQ,aAAc,sBAAuBuO,MAG/CA,QAGkB,IAAZ8B,EAAmBC,EAAUE,EAQrCG,eAEMvR,OAAOoF,sBAAsBlK,SAASsW,QAEtC5H,EAAiB5U,EAAUwc,EAAiB,WAChD5H,EAAe1O,SAAS,CAAEuW,EAAerE,UAEnC4D,KAAMS,EAAcpc,iBAAkB,gBAEzC6K,MAE2B,IAA1B0J,EAAe3S,QAAeiJ,KAAK8Q,KAAMQ,EAAgBnc,iBAAkB,iBAgBjF2P,OAAQmK,EAAOsB,OAEViB,EAAmB,CACtBC,MAAO,GACPC,OAAQ,IAGLpJ,EAAetI,KAAKF,OAAOkF,qBAC3BsD,GAAgBtI,KAAKF,OAAOM,YAAYmQ,YAE3CA,EAAYA,GAAavQ,KAAK8Q,KAAMxI,EAAanT,iBAAkB,eAErD4B,OAAS,KAElB4a,EAAW,KAEM,iBAAV1C,EAAqB,KAC3B2C,EAAkB5R,KAAK8Q,KAAMxI,EAAanT,iBAAkB,sBAAwBgD,MACpFyZ,IACH3C,EAAQ1I,SAAUqL,EAAgBjR,aAAc,wBAA2B,EAAG,KAIhF1L,MAAMC,KAAMqb,GAAYvV,SAAS,CAAEjG,EAAIF,QAElCE,EAAGuL,aAAc,yBACpBzL,EAAI0R,SAAUxR,EAAG4L,aAAc,uBAAyB,KAGzDgR,EAAW3V,KAAKE,IAAKyV,EAAU9c,GAG3BA,GAAKoa,EAAQ,KACZ4C,EAAa9c,EAAGQ,UAAU8T,SAAU,WACxCtU,EAAGQ,UAAUC,IAAK,WAClBT,EAAGQ,UAAUE,OAAQ,oBAEjBZ,IAAMoa,SAEJnP,OAAOgS,eAAgB9R,KAAKF,OAAOiS,cAAehd,IAEvDA,EAAGQ,UAAUC,IAAK,yBACbsK,OAAOiJ,aAAa/F,qBAAsBjO,IAG3C8c,IACJL,EAAiBC,MAAMnS,KAAMvK,QACxB+K,OAAOjD,cAAc,CACzB3G,OAAQnB,EACRwC,KAAM,UACNya,SAAS,SAKP,KACAH,EAAa9c,EAAGQ,UAAU8T,SAAU,WACxCtU,EAAGQ,UAAUE,OAAQ,WACrBV,EAAGQ,UAAUE,OAAQ,oBAEjBoc,SACE/R,OAAOiJ,aAAa9E,oBAAqBlP,GAC9Cyc,EAAiBE,OAAOpS,KAAMvK,QACzB+K,OAAOjD,cAAc,CACzB3G,OAAQnB,EACRwC,KAAM,SACNya,SAAS,SAUb/C,EAAyB,iBAAVA,EAAqBA,GAAS,EAC7CA,EAAQjT,KAAKE,IAAKF,KAAKC,IAAKgT,EAAO0C,IAAa,GAChDrJ,EAAa5H,aAAc,gBAAiBuO,UAMvCuC,EAYR5J,KAAMpH,EAAQR,KAAKF,OAAOkF,0BAElBhF,KAAK8Q,KAAMtQ,EAAMrL,iBAAkB,cAe3C8c,KAAMhD,EAAOiD,EAAS,OAEjB5J,EAAetI,KAAKF,OAAOkF,qBAC3BsD,GAAgBtI,KAAKF,OAAOM,YAAYmQ,UAAY,KAEnDA,EAAYvQ,KAAK8Q,KAAMxI,EAAanT,iBAAkB,gCACtDob,EAAUxZ,OAAS,IAGD,iBAAVkY,EAAqB,KAC3BkD,EAAsBnS,KAAK8Q,KAAMxI,EAAanT,iBAAkB,qCAAuCgD,MAG1G8W,EADGkD,EACK5L,SAAU4L,EAAoBxR,aAAc,wBAA2B,EAAG,KAGzE,EAKXsO,GAASiD,MAELV,EAAmBxR,KAAK8E,OAAQmK,EAAOsB,UAEvCiB,EAAiBE,OAAO3a,aACtB+I,OAAOjD,cAAc,CACzBtF,KAAM,iBACNsQ,KAAM,CACLsJ,SAAUK,EAAiBE,OAAO,GAClCnB,UAAWiB,EAAiBE,UAK3BF,EAAiBC,MAAM1a,aACrB+I,OAAOjD,cAAc,CACzBtF,KAAM,gBACNsQ,KAAM,CACLsJ,SAAUK,EAAiBC,MAAM,GACjClB,UAAWiB,EAAiBC,cAK1B3R,OAAO0D,SAASsB,cAChBhF,OAAOsS,SAAStN,SAEjB9E,KAAKF,OAAOM,YAAYiS,oBACtBvS,OAAOhI,SAASwa,cAGXd,EAAiBC,MAAM1a,SAAUya,EAAiBE,OAAO3a,gBAM/D,EAUR8Z,cAEQ7Q,KAAKiS,KAAM,KAAM,GAUzBrB,cAEQ5Q,KAAKiS,KAAM,MAAO,IC5WZ,MAAMM,EAEpB1S,YAAaC,QAEPA,OAASA,OAEThF,QAAS,OAET0X,eAAiBxS,KAAKwS,eAAevS,KAAMD,MAQjDyS,cAGKzS,KAAKF,OAAOM,YAAYsS,WAAa1S,KAAK2S,WAAa,MAErD7X,QAAS,OAETgF,OAAOwE,mBAAmB/O,UAAUC,IAAK,iBAGzCsK,OAAO8S,uBAIP9S,OAAO+C,mBAAmBzL,YAAa4I,KAAKF,OAAO+S,yBAGxD/d,EAAUkL,KAAKF,OAAOwE,mBVvCM,mBUuCgCtJ,SAASwF,IAC/DA,EAAMjL,UAAU8T,SAAU,UAC9B7I,EAAMiD,iBAAkB,QAASzD,KAAKwS,gBAAgB,YAKlDM,EAAS,GACTC,EAAY/S,KAAKF,OAAOkT,4BACzBC,mBAAqBF,EAAU/Q,MAAQ8Q,OACvCI,oBAAsBH,EAAUza,OAASwa,EAG1C9S,KAAKF,OAAOM,YAAYqI,WACtBwK,oBAAsBjT,KAAKiT,yBAG5BnT,OAAOqT,8BAEP9Q,cACAyC,cAEAhF,OAAOuC,eAENmD,EAAUxF,KAAKF,OAAO2F,kBAGvB3F,OAAOjD,cAAc,CACzBtF,KAAM,gBACNsQ,KAAM,QACKrC,EAAQE,SACRF,EAAQK,eACF7F,KAAKF,OAAOkF,sBAYhC3C,cAGMvC,OAAOoF,sBAAsBlK,SAAS,CAAEoY,EAAQ1N,KACpD0N,EAAO1S,aAAc,eAAgBgF,GACrC7P,EAAkBud,EAAQ,eAAmB1N,EAAI1F,KAAKiT,mBAAuB,aAEzEG,EAAO7d,UAAU8T,SAAU,UAE9BvU,EAAUse,EAAQ,WAAYpY,SAAS,CAAEqY,EAAQxN,KAChDwN,EAAO3S,aAAc,eAAgBgF,GACrC2N,EAAO3S,aAAc,eAAgBmF,GAErChQ,EAAkBwd,EAAQ,kBAAsBxN,EAAI7F,KAAKkT,oBAAwB,gBAOpFje,MAAMC,KAAM8K,KAAKF,OAAO+S,wBAAwBlK,YAAa3N,SAAS,CAAEsY,EAAa5N,KACpF7P,EAAkByd,EAAa,eAAmB5N,EAAI1F,KAAKiT,mBAAuB,aAElFne,EAAUwe,EAAa,qBAAsBtY,SAAS,CAAEuY,EAAa1N,KACpEhQ,EAAkB0d,EAAa,kBAAsB1N,EAAI7F,KAAKkT,oBAAwB,gBAUzFpO,eAEO0O,EAAOxX,KAAKC,IAAK0D,OAAO8T,WAAY9T,OAAO+T,aAC3C7G,EAAQ7Q,KAAKE,IAAKsX,EAAO,EAAG,KAAQA,EACpChO,EAAUxF,KAAKF,OAAO2F,kBAEvB3F,OAAO6T,gBAAiB,CAC5BjB,SAAU,CACT,SAAU7F,EAAO,IACjB,eAAkBrH,EAAQE,EAAI1F,KAAKiT,mBAAsB,MACzD,eAAkBzN,EAAQK,EAAI7F,KAAKkT,oBAAuB,OACzDxR,KAAM,OASVkS,gBAGK5T,KAAKF,OAAOM,YAAYsS,SAAW,MAEjC5X,QAAS,OAETgF,OAAOwE,mBAAmB/O,UAAUE,OAAQ,iBAK5CqK,OAAOwE,mBAAmB/O,UAAUC,IAAK,yBAE9C6I,YAAY,UACNyB,OAAOwE,mBAAmB/O,UAAUE,OAAQ,2BAC/C,QAGEqK,OAAOwE,mBAAmBlN,YAAa4I,KAAKF,OAAO+S,yBAGxD/d,EAAUkL,KAAKF,OAAOwE,mBV/JM,mBU+JgCtJ,SAASwF,IACpE3K,EAAkB2K,EAAO,IAEzBA,EAAMkD,oBAAqB,QAAS1D,KAAKwS,gBAAgB,MAI1D1d,EAAUkL,KAAKF,OAAO+S,wBAAyB,qBAAsB7X,SAAS+F,IAC7ElL,EAAkBkL,EAAY,YAG1BjB,OAAO6T,gBAAiB,CAAEjB,SAAU,WAEnClN,EAAUxF,KAAKF,OAAO2F,kBAEvB3F,OAAOU,MAAOgF,EAAQE,EAAGF,EAAQK,QACjC/F,OAAOuC,cACPvC,OAAO+T,oBAGP/T,OAAOjD,cAAc,CACzBtF,KAAM,iBACNsQ,KAAM,QACKrC,EAAQE,SACRF,EAAQK,eACF7F,KAAKF,OAAOkF,sBAchC8O,OAAQC,GAEiB,kBAAbA,EACVA,EAAW/T,KAAKyS,WAAazS,KAAK4T,kBAG7BjB,WAAa3S,KAAK4T,aAAe5T,KAAKyS,WAW7CE,kBAEQ3S,KAAKlF,OASb0X,eAAgB7O,MAEX3D,KAAK2S,WAAa,CACrBhP,EAAMqQ,qBAEFle,EAAU6N,EAAMzN,YAEbJ,IAAYA,EAAQsZ,SAASzZ,MAAO,cAC1CG,EAAUA,EAAQU,cAGfV,IAAYA,EAAQP,UAAU8T,SAAU,mBAEtCuK,aAED9d,EAAQsZ,SAASzZ,MAAO,cAAgB,KACvC+P,EAAIa,SAAUzQ,EAAQ6K,aAAc,gBAAkB,IACzDkF,EAAIU,SAAUzQ,EAAQ6K,aAAc,gBAAkB,SAElDb,OAAOU,MAAOkF,EAAGG,MCjPZ,MAAMoO,EAEpBpU,YAAaC,QAEPA,OAASA,OAIToU,UAAY,QAGZC,SAAW,QAEXC,kBAAoBpU,KAAKoU,kBAAkBnU,KAAMD,WACjDqU,mBAAqBrU,KAAKqU,mBAAmBpU,KAAMD,MAOzDuE,UAAWC,EAAQC,GAEY,WAA1BD,EAAO8P,qBACLJ,UAAU,mDAAqD,kBAC/DA,UAAU,yCAAqD,wBAG/DA,UAAU,eAAmB,kBAC7BA,UAAL,EAAkC,sBAC7BA,UAAU,iBAAmB,qBAC7BA,UAAU,iBAAmB,sBAC7BA,UAAU,iBAAmB,mBAC7BA,UAAU,iBAAmB,sBAG9BA,UAAU,0BAAmC,mBAC7CA,UAAU,yBAAmC,kBAC7CA,UAAU,WAAmC,aAC7CA,UAAL,EAAkD,kBAC7CA,UAAU,UAAmC,iBAOnDjU,OAEC/I,SAASuM,iBAAkB,UAAWzD,KAAKoU,mBAAmB,GAC9Dld,SAASuM,iBAAkB,WAAYzD,KAAKqU,oBAAoB,GAOjEE,SAECrd,SAASwM,oBAAqB,UAAW1D,KAAKoU,mBAAmB,GACjEld,SAASwM,oBAAqB,WAAY1D,KAAKqU,oBAAoB,GAQpEG,cAAeC,EAASC,GAEA,iBAAZD,GAAwBA,EAAQE,aACrCR,SAASM,EAAQE,SAAW,CAChCD,SAAUA,EACV7a,IAAK4a,EAAQ5a,IACb+a,YAAaH,EAAQG,kBAIjBT,SAASM,GAAW,CACxBC,SAAUA,EACV7a,IAAK,KACL+a,YAAa,MAShBC,iBAAkBF,UAEV3U,KAAKmU,SAASQ,GAStBG,WAAYH,QAENP,kBAAmB,CAAEO,QAAAA,IAU3BI,yBAA0Blb,EAAKvE,QAEzB4e,UAAUra,GAAOvE,EAIvB0f,sBAEQhV,KAAKkU,UAIbe,qBAEQjV,KAAKmU,SASbE,mBAAoB1Q,GAGfA,EAAMuR,UAA+B,KAAnBvR,EAAMwR,eACtBrV,OAAOsV,aAUdhB,kBAAmBzQ,OAEda,EAASxE,KAAKF,OAAOM,eAIe,mBAA7BoE,EAAO6Q,oBAAwE,IAApC7Q,EAAO6Q,kBAAkB1R,UACvE,KAKyB,YAA7Ba,EAAO6Q,oBAAoCrV,KAAKF,OAAOwV,mBACnD,MAIJX,EAAUhR,EAAMgR,QAGhBY,GAAsBvV,KAAKF,OAAO0V,qBAEjC1V,OAAO2V,YAAa9R,OAGrB+R,EAAoBxe,SAASye,gBAA8D,IAA7Cze,SAASye,cAAcC,kBACrEC,EAAuB3e,SAASye,eAAiBze,SAASye,cAAclV,SAAW,kBAAkBzH,KAAM9B,SAASye,cAAclV,SAClIqV,EAAuB5e,SAASye,eAAiBze,SAASye,cAActgB,WAAa,iBAAiB2D,KAAM9B,SAASye,cAActgB,WAGnI0gB,EAAoBpS,EAAMuR,UAA8B,KAAlBvR,EAAMgR,QAC5CqB,EAAqBrS,EAAMuR,UAAwB,KAAZP,EACvCsB,EAAoBtS,EAAMuR,UAAwB,KAAZP,EAGtCuB,GAAmBH,IAAsBC,IAAuBC,IAC5DtS,EAAMuR,UAAYvR,EAAMwS,QAAUxS,EAAMyS,SAAWzS,EAAM0S,YAI7DX,GAAqBG,GAAwBC,GAAwBI,EAAiB,WAItFrc,EADAyc,EAAiB,CAAC,GAAG,GAAG,IAAI,QAID,iBAApB9R,EAAO+R,aACZ1c,KAAO2K,EAAO+R,SACW,gBAAzB/R,EAAO+R,SAAS1c,IACnByc,EAAehX,KAAMiH,SAAU1M,EAAK,QAKnCmG,KAAKF,OAAO0W,aAAqD,IAAvCF,EAAevT,QAAS4R,UAC9C,MAKJ8B,EAA0C,WAA1BjS,EAAO8P,iBAAgCtU,KAAKF,OAAO4W,wBAA0B1W,KAAKF,OAAO6W,oBAEzGC,GAAY,KAGe,iBAApBpS,EAAO+R,aAEZ1c,KAAO2K,EAAO+R,YAGdhQ,SAAU1M,EAAK,MAAS8a,EAAU,KAEjCrf,EAAQkP,EAAO+R,SAAU1c,GAGR,mBAAVvE,EACVA,EAAMuhB,MAAO,KAAM,CAAElT,IAGI,iBAAVrO,GAAsD,mBAAzB0K,KAAKF,OAAQxK,SACpDwK,OAAQxK,GAAQgB,OAGtBsgB,GAAY,MASG,IAAdA,MAEE/c,KAAOmG,KAAKmU,YAGZ5N,SAAU1M,EAAK,MAAS8a,EAAU,KAEjCmC,EAAS9W,KAAKmU,SAAUta,GAAM6a,SAGZ,mBAAXoC,EACVA,EAAOD,MAAO,KAAM,CAAElT,IAGI,iBAAXmT,GAAwD,mBAA1B9W,KAAKF,OAAQgX,SACrDhX,OAAQgX,GAASxgB,OAGvBsgB,GAAY,GAMG,IAAdA,IAGHA,GAAY,EAGI,KAAZjC,GAA8B,KAAZA,OAChB7U,OAAO8Q,OAGQ,KAAZ+D,GAA8B,KAAZA,OACrB7U,OAAO+Q,OAGQ,KAAZ8D,GAA8B,KAAZA,EACtBqB,OACElW,OAAOU,MAAO,IAEVR,KAAKF,OAAO4S,SAASC,YAAc8D,OACvC3W,OAAO8Q,YAGP9Q,OAAOiX,OAIO,KAAZpC,GAA8B,KAAZA,EACtBsB,OACEnW,OAAOU,MAAOwW,OAAOC,YAEjBjX,KAAKF,OAAO4S,SAASC,YAAc8D,OACvC3W,OAAO+Q,YAGP/Q,OAAOoX,QAIO,KAAZvC,GAA8B,KAAZA,GACrB3U,KAAKF,OAAO4S,SAASC,YAAc8D,OAClC3W,OAAO8Q,YAGP9Q,OAAOqX,KAIO,KAAZxC,GAA8B,KAAZA,GACrB3U,KAAKF,OAAO4S,SAASC,YAAc8D,OAClC3W,OAAO+Q,YAGP/Q,OAAOsX,OAIO,KAAZzC,OACH7U,OAAOU,MAAO,GAGC,KAAZmU,OACH7U,OAAOU,MAAOwW,OAAOC,WAGN,KAAZtC,GACJ3U,KAAKF,OAAO4S,SAASC,iBACnB7S,OAAO4S,SAASkB,aAElBjQ,EAAMuR,cACJpV,OAAO8Q,YAGP9Q,OAAO+Q,QAIO,KAAZ8D,GAA8B,KAAZA,GAA8B,KAAZA,GAA8B,KAAZA,GAA8B,MAAZA,GAA+B,MAAZA,OAC9F7U,OAAOuX,cAGQ,KAAZ1C,EVlNmB7e,CAAAA,QAK1BwhB,GAHJxhB,EAAUA,GAAWoB,SAASqgB,iBAGFC,mBACvB1hB,EAAQ2hB,yBACR3hB,EAAQ4hB,yBACR5hB,EAAQ6hB,sBACR7hB,EAAQ8hB,oBAETN,GACHA,EAAcT,MAAO/gB,IUuMnB+hB,CAAiBrT,EAAOsT,SAAW9X,KAAKF,OAAOiY,qBAAuB7gB,SAASqgB,iBAG3D,KAAZ5C,EACHnQ,EAAOwT,yBACNlY,OAAOmY,gBAAiB1C,GAI9BqB,GAAY,GAOVA,EACHjT,EAAMqQ,gBAAkBrQ,EAAMqQ,iBAGV,KAAZW,GAA8B,KAAZA,KACS,IAA/B3U,KAAKF,OAAOoY,qBACVpY,OAAO4S,SAASoB,SAGtBnQ,EAAMqQ,gBAAkBrQ,EAAMqQ,uBAK1BlU,OAAO+T,gBC5XC,MAAMsE,EAEpBtY,YAAaC,QAEPA,OAASA,OAGTsY,gBAAkB,OAElBC,mBAAqBrY,KAAKqY,mBAAmBpY,KAAMD,MAIzDC,OAECN,OAAO8D,iBAAkB,aAAczD,KAAKqY,oBAAoB,GAIjE9D,SAEC5U,OAAO+D,oBAAqB,aAAc1D,KAAKqY,oBAAoB,GAOpEC,cAEK9T,EAASxE,KAAKF,OAAOM,YACrBoF,EAAUxF,KAAKF,OAAO2F,aACtB6C,EAAetI,KAAKF,OAAOkF,kBAE3BuT,EAAO5Y,OAAO7H,SAASygB,KAGvBC,EAAOD,EAAKpe,MAAO,GAAIlC,MAAO,KACjCwgB,EAAOF,EAAKvgB,QAAS,SAAU,QAI3B,WAAWgB,KAAMwf,EAAK,KAAQC,EAAK1hB,OAAS,KAC5CjB,EAEA8E,EAGA,aAAa5B,KAAMyf,KACtB7d,EAAI2L,SAAUkS,EAAKxgB,MAAO,KAAME,MAAO,IACvCyC,EAAIsL,MAAMtL,QAAK8E,EAAY9E,EAC3B6d,EAAOA,EAAKxgB,MAAO,KAAMC,aAKzBpC,EAAUoB,SAASwhB,eAAgBC,mBAAoBF,IAExD,MAAQG,QAGJC,IAA2BvQ,GAAeA,EAAa3H,aAAc,QAAW8X,KAEhF3iB,OAEG+iB,QAAyC,IAANje,EAAoB,KAExDke,EAAe9Y,KAAKF,OAAO2F,WAAY3P,QACtCgK,OAAOU,MAAOsY,EAAapT,EAAGoT,EAAajT,EAAGjL,cAK/CkF,OAAOU,MAAOgF,EAAQE,GAAK,EAAGF,EAAQK,GAAK,OAG7C,KAMHjL,EALGme,EAAgBvU,EAAOwU,kBAAoB,EAAI,EAG/CtT,EAAMa,SAAUiS,EAAK,GAAI,IAAOO,GAAmB,EACtDlT,EAAMU,SAAUiS,EAAK,GAAI,IAAOO,GAAmB,EAGhDvU,EAAO6N,gBACVzX,EAAI2L,SAAUiS,EAAK,GAAI,IACnBtS,MAAOtL,KACVA,OAAI8E,IAIFgG,IAAMF,EAAQE,GAAKG,IAAML,EAAQK,QAAWnG,IAAN9E,QACpCkF,OAAOU,MAAOkF,EAAGG,EAAGjL,IAa5B0X,SAAUrG,OAELzH,EAASxE,KAAKF,OAAOM,YACrBkI,EAAetI,KAAKF,OAAOkF,qBAG/B5G,aAAc4B,KAAKoY,iBAGE,iBAAVnM,OACLmM,gBAAkB/Z,WAAY2B,KAAKsS,SAAUrG,QAE9C,GAAI3D,EAAe,KAEnBiQ,EAAOvY,KAAK+F,UAIZvB,EAAOyU,QACVtZ,OAAO7H,SAASygB,KAAOA,EAIf/T,EAAO+T,OAEF,MAATA,EACH5Y,OAAOsZ,QAAQC,aAAc,KAAM,KAAMvZ,OAAO7H,SAASqhB,SAAWxZ,OAAO7H,SAASC,QAGpF4H,OAAOsZ,QAAQC,aAAc,KAAM,KAAM,IAAMX,KAuBnDxS,QAASvF,OAEJsF,EAAM,IAGNsT,EAAI5Y,GAASR,KAAKF,OAAOkF,kBACzBgH,EAAKoN,EAAIA,EAAEzY,aAAc,MAAS,KAClCqL,IACHA,EAAKqN,mBAAoBrN,QAGtBiD,EAAQjP,KAAKF,OAAO2F,WAAYjF,MAC/BR,KAAKF,OAAOM,YAAYiS,gBAC5BpD,EAAMrU,OAAI8E,GAKO,iBAAPsM,GAAmBA,EAAGjV,OAChC+O,EAAM,IAAMkG,EAIRiD,EAAMrU,GAAK,IAAIkL,GAAO,IAAMmJ,EAAMrU,OAGlC,KACAme,EAAgB/Y,KAAKF,OAAOM,YAAY4Y,kBAAoB,EAAI,GAChE/J,EAAMvJ,EAAI,GAAKuJ,EAAMpJ,EAAI,GAAKoJ,EAAMrU,GAAK,KAAIkL,GAAOmJ,EAAMvJ,EAAIqT,IAC9D9J,EAAMpJ,EAAI,GAAKoJ,EAAMrU,GAAK,KAAIkL,GAAO,KAAOmJ,EAAMpJ,EAAIkT,IACtD9J,EAAMrU,GAAK,IAAIkL,GAAO,IAAMmJ,EAAMrU,UAGhCkL,EASRuS,mBAAoB1U,QAEd2U,WC7LQ,MAAMgB,EAEpBzZ,YAAaC,QAEPA,OAASA,OAETyZ,sBAAwBvZ,KAAKuZ,sBAAsBtZ,KAAMD,WACzDwZ,uBAAyBxZ,KAAKwZ,uBAAuBvZ,KAAMD,WAC3DyZ,oBAAsBzZ,KAAKyZ,oBAAoBxZ,KAAMD,WACrD0Z,sBAAwB1Z,KAAK0Z,sBAAsBzZ,KAAMD,WACzD2Z,sBAAwB3Z,KAAK2Z,sBAAsB1Z,KAAMD,WACzD4Z,sBAAwB5Z,KAAK4Z,sBAAsB3Z,KAAMD,MAI/DqE,eAEOoE,EAAMzI,KAAKF,OAAOM,YAAYqI,IAC9BoR,EAAgB7Z,KAAKF,OAAOwE,wBAE7BxO,QAAUoB,SAASC,cAAe,cAClCrB,QAAQT,UAAY,gBACpBS,QAAQe,UACX,6CAA6C4R,EAAM,aAAe,mHACrBA,EAAM,iBAAmB,mRAInE3I,OAAOwE,mBAAmBlN,YAAa4I,KAAKlK,cAG5CgkB,aAAehlB,EAAU+kB,EAAe,uBACxCE,cAAgBjlB,EAAU+kB,EAAe,wBACzCG,WAAallB,EAAU+kB,EAAe,qBACtCI,aAAenlB,EAAU+kB,EAAe,uBACxCK,aAAeplB,EAAU+kB,EAAe,uBACxCM,aAAerlB,EAAU+kB,EAAe,uBAGxCO,mBAAqBpa,KAAKlK,QAAQsM,cAAe,wBACjDiY,kBAAoBra,KAAKlK,QAAQsM,cAAe,uBAChDkY,kBAAoBta,KAAKlK,QAAQsM,cAAe,kBAOtDmC,UAAWC,EAAQC,QAEb3O,QAAQE,MAAMyG,QAAU+H,EAAOhB,SAAW,QAAU,YAEpD1N,QAAQ4K,aAAc,uBAAwB8D,EAAO+V,qBACrDzkB,QAAQ4K,aAAc,4BAA6B8D,EAAOgW,oBAIhEva,WAIKwa,EAAgB,CAAE,aAAc,SAIhCrhB,IACHqhB,EAAgB,CAAE,eAGnBA,EAAczf,SAAS0f,SACjBZ,aAAa9e,SAASjG,GAAMA,EAAG0O,iBAAkBiX,EAAW1a,KAAKuZ,uBAAuB,UACxFQ,cAAc/e,SAASjG,GAAMA,EAAG0O,iBAAkBiX,EAAW1a,KAAKwZ,wBAAwB,UAC1FQ,WAAWhf,SAASjG,GAAMA,EAAG0O,iBAAkBiX,EAAW1a,KAAKyZ,qBAAqB,UACpFQ,aAAajf,SAASjG,GAAMA,EAAG0O,iBAAkBiX,EAAW1a,KAAK0Z,uBAAuB,UACxFQ,aAAalf,SAASjG,GAAMA,EAAG0O,iBAAkBiX,EAAW1a,KAAK2Z,uBAAuB,UACxFQ,aAAanf,SAASjG,GAAMA,EAAG0O,iBAAkBiX,EAAW1a,KAAK4Z,uBAAuB,QAK/FrF,UAEG,aAAc,SAAUvZ,SAAS0f,SAC7BZ,aAAa9e,SAASjG,GAAMA,EAAG2O,oBAAqBgX,EAAW1a,KAAKuZ,uBAAuB,UAC3FQ,cAAc/e,SAASjG,GAAMA,EAAG2O,oBAAqBgX,EAAW1a,KAAKwZ,wBAAwB,UAC7FQ,WAAWhf,SAASjG,GAAMA,EAAG2O,oBAAqBgX,EAAW1a,KAAKyZ,qBAAqB,UACvFQ,aAAajf,SAASjG,GAAMA,EAAG2O,oBAAqBgX,EAAW1a,KAAK0Z,uBAAuB,UAC3FQ,aAAalf,SAASjG,GAAMA,EAAG2O,oBAAqBgX,EAAW1a,KAAK2Z,uBAAuB,UAC3FQ,aAAanf,SAASjG,GAAMA,EAAG2O,oBAAqBgX,EAAW1a,KAAK4Z,uBAAuB,QAQlG9U,aAEK6V,EAAS3a,KAAKF,OAAO4Q,sBAGrB1Q,KAAK8Z,gBAAiB9Z,KAAK+Z,iBAAkB/Z,KAAKga,cAAeha,KAAKia,gBAAiBja,KAAKka,gBAAiBla,KAAKma,cAAcnf,SAAS/D,IAC5IA,EAAK1B,UAAUE,OAAQ,UAAW,cAGlCwB,EAAKyJ,aAAc,WAAY,eAI5Bia,EAAO5D,MAAO/W,KAAK8Z,aAAa9e,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAG6L,gBAAiB,eACpG+Z,EAAOzD,OAAQlX,KAAK+Z,cAAc/e,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAG6L,gBAAiB,eACtG+Z,EAAOxD,IAAKnX,KAAKga,WAAWhf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAG6L,gBAAiB,eAChG+Z,EAAOvD,MAAOpX,KAAKia,aAAajf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAG6L,gBAAiB,gBAGpG+Z,EAAO5D,MAAQ4D,EAAOxD,KAAKnX,KAAKka,aAAalf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAG6L,gBAAiB,gBACjH+Z,EAAOzD,OAASyD,EAAOvD,OAAOpX,KAAKma,aAAanf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAG6L,gBAAiB,mBAGpH0H,EAAetI,KAAKF,OAAOkF,qBAC3BsD,EAAe,KAEdsS,EAAkB5a,KAAKF,OAAOyQ,UAAUG,kBAGxCkK,EAAgBhK,MAAO5Q,KAAKka,aAAalf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAG6L,gBAAiB,eAC3Hga,EAAgB/J,MAAO7Q,KAAKma,aAAanf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAG6L,gBAAiB,eAI3HZ,KAAKF,OAAO8F,gBAAiB0C,IAC5BsS,EAAgBhK,MAAO5Q,KAAKga,WAAWhf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAG6L,gBAAiB,eACzHga,EAAgB/J,MAAO7Q,KAAKia,aAAajf,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAG6L,gBAAiB,iBAG3Hga,EAAgBhK,MAAO5Q,KAAK8Z,aAAa9e,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAG6L,gBAAiB,eAC3Hga,EAAgB/J,MAAO7Q,KAAK+Z,cAAc/e,SAASjG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAG6L,gBAAiB,mBAK9HZ,KAAKF,OAAOM,YAAYya,iBAAmB,KAE1CrV,EAAUxF,KAAKF,OAAO2F,cAIrBzF,KAAKF,OAAOgb,0BAA4BH,EAAOvD,UAC9CkD,kBAAkB/kB,UAAUC,IAAK,mBAGjC8kB,kBAAkB/kB,UAAUE,OAAQ,aAErCuK,KAAKF,OAAOM,YAAYqI,KAEtBzI,KAAKF,OAAOib,4BAA8BJ,EAAO5D,MAAsB,IAAdvR,EAAQK,OAChEwU,kBAAkB9kB,UAAUC,IAAK,kBAGjC6kB,kBAAkB9kB,UAAUE,OAAQ,cAKrCuK,KAAKF,OAAOib,4BAA8BJ,EAAOzD,OAAuB,IAAd1R,EAAQK,OACjEuU,mBAAmB7kB,UAAUC,IAAK,kBAGlC4kB,mBAAmB7kB,UAAUE,OAAQ,eAU/C8jB,sBAAuB5V,GAEtBA,EAAMqQ,sBACDlU,OAAO2V,cAEmC,WAA3CzV,KAAKF,OAAOM,YAAYkU,oBACtBxU,OAAO8Q,YAGP9Q,OAAOiX,OAKdyC,uBAAwB7V,GAEvBA,EAAMqQ,sBACDlU,OAAO2V,cAEmC,WAA3CzV,KAAKF,OAAOM,YAAYkU,oBACtBxU,OAAO+Q,YAGP/Q,OAAOoX,QAKduC,oBAAqB9V,GAEpBA,EAAMqQ,sBACDlU,OAAO2V,mBAEP3V,OAAOqX,KAIbuC,sBAAuB/V,GAEtBA,EAAMqQ,sBACDlU,OAAO2V,mBAEP3V,OAAOsX,OAIbuC,sBAAuBhW,GAEtBA,EAAMqQ,sBACDlU,OAAO2V,mBAEP3V,OAAO8Q,OAIbgJ,sBAAuBjW,GAEtBA,EAAMqQ,sBACDlU,OAAO2V,mBAEP3V,OAAO+Q,QC1PC,MAAMmK,EAEpBnb,YAAaC,QAEPA,OAASA,OAETmb,kBAAoBjb,KAAKib,kBAAkBhb,KAAMD,MAIvDqE,cAEMvO,QAAUoB,SAASC,cAAe,YAClCrB,QAAQT,UAAY,gBACpByK,OAAOwE,mBAAmBlN,YAAa4I,KAAKlK,cAE5ColB,IAAMhkB,SAASC,cAAe,aAC9BrB,QAAQsB,YAAa4I,KAAKkb,KAOhC3W,UAAWC,EAAQC,QAEb3O,QAAQE,MAAMyG,QAAU+H,EAAO4N,SAAW,QAAU,OAI1DnS,OAEKD,KAAKF,OAAOM,YAAYgS,UAAYpS,KAAKlK,cACvCA,QAAQ2N,iBAAkB,QAASzD,KAAKib,mBAAmB,GAKlE1G,SAEMvU,KAAKF,OAAOM,YAAYgS,UAAYpS,KAAKlK,cACxCA,QAAQ4N,oBAAqB,QAAS1D,KAAKib,mBAAmB,GAQrEnW,YAGK9E,KAAKF,OAAOM,YAAYgS,UAAYpS,KAAKkb,IAAM,KAE9CrO,EAAQ7M,KAAKF,OAAOqb,cAGpBnb,KAAKF,OAAOyF,iBAAmB,IAClCsH,EAAQ,QAGJqO,IAAIllB,MAAMD,UAAY,UAAW8W,EAAO,KAM/CuO,qBAEQpb,KAAKF,OAAOwE,mBAAmBwF,YAYvCmR,kBAAmBtX,QAEb7D,OAAO2V,YAAa9R,GAEzBA,EAAMqQ,qBAEFqH,EAASrb,KAAKF,OAAO+K,YACrByQ,EAAcD,EAAOtkB,OACrBwkB,EAAavf,KAAKwf,MAAS7X,EAAM8X,QAAUzb,KAAKob,cAAkBE,GAElEtb,KAAKF,OAAOM,YAAYqI,MAC3B8S,EAAaD,EAAcC,OAGxBG,EAAgB1b,KAAKF,OAAO2F,WAAW4V,EAAOE,SAC7Czb,OAAOU,MAAOkb,EAAchW,EAAGgW,EAAc7V,IChGrC,MAAM8V,EAEpB9b,YAAaC,QAEPA,OAASA,OAGT8b,mBAAqB,OAGrBC,cAAe,OAGfC,sBAAwB,OAExBC,uBAAyB/b,KAAK+b,uBAAuB9b,KAAMD,WAC3Dgc,sBAAwBhc,KAAKgc,sBAAsB/b,KAAMD,MAO/DuE,UAAWC,EAAQC,GAEdD,EAAOyX,YACV/kB,SAASuM,iBAAkB,iBAAkBzD,KAAKgc,uBAAuB,GACzE9kB,SAASuM,iBAAkB,aAAczD,KAAKgc,uBAAuB,KAGrE9kB,SAASwM,oBAAqB,iBAAkB1D,KAAKgc,uBAAuB,GAC5E9kB,SAASwM,oBAAqB,aAAc1D,KAAKgc,uBAAuB,IAIrExX,EAAO0X,oBACVhlB,SAASuM,iBAAkB,YAAazD,KAAK+b,wBAAwB,GACrE7kB,SAASuM,iBAAkB,YAAazD,KAAK+b,wBAAwB,UAGhEI,aAELjlB,SAASwM,oBAAqB,YAAa1D,KAAK+b,wBAAwB,GACxE7kB,SAASwM,oBAAqB,YAAa1D,KAAK+b,wBAAwB,IAS1EI,aAEKnc,KAAK6b,oBACHA,cAAe,OACf/b,OAAOwE,mBAAmBtO,MAAMomB,OAAS,IAShDC,cAE2B,IAAtBrc,KAAK6b,oBACHA,cAAe,OACf/b,OAAOwE,mBAAmBtO,MAAMomB,OAAS,QAWhDL,uBAAwBpY,QAElBwY,aAEL/d,aAAc4B,KAAK8b,4BAEdA,sBAAwBzd,WAAY2B,KAAKqc,WAAWpc,KAAMD,MAAQA,KAAKF,OAAOM,YAAYkc,gBAUhGN,sBAAuBrY,MAElB4Y,KAAKC,MAAQxc,KAAK4b,mBAAqB,IAAO,MAE5CA,mBAAqBW,KAAKC,UAE3BxP,EAAQrJ,EAAM5G,SAAW4G,EAAM8Y,WAC/BzP,EAAQ,OACNlN,OAAO+Q,OAEJ7D,EAAQ,QACXlN,OAAO8Q,SCvGT,MAAM8L,EAAa,CAAE5W,EAAK4O,WAE1BiI,EAASzlB,SAASC,cAAe,UACvCwlB,EAAOplB,KAAO,kBACdolB,EAAOC,OAAQ,EACfD,EAAOE,OAAQ,EACfF,EAAO7Z,IAAMgD,EAEW,mBAAb4O,IAGViI,EAAOG,OAASH,EAAOI,mBAAqBpZ,KACxB,SAAfA,EAAMpM,MAAmB,kBAAkByB,KAAM2jB,EAAOvZ,eAG3DuZ,EAAOG,OAASH,EAAOI,mBAAqBJ,EAAOK,QAAU,KAE7DtI,MAMFiI,EAAOK,QAAUC,IAGhBN,EAAOG,OAASH,EAAOI,mBAAqBJ,EAAOK,QAAU,KAE7DtI,EAAU,IAAIwI,MAAO,0BAA4BP,EAAO7Z,IAAM,KAAOma,YAOjEtlB,EAAOT,SAASkL,cAAe,QACrCzK,EAAKwlB,aAAcR,EAAQhlB,EAAKylB,YCtClB,MAAMC,EAEpBxd,YAAayd,QAEPxd,OAASwd,OAGTC,MAAQ,YAGRC,kBAAoB,QAEpBC,kBAAoB,GAiB1Bld,KAAMmd,EAASC,eAETJ,MAAQ,UAEbG,EAAQ1iB,QAASgF,KAAK4d,eAAe3d,KAAMD,OAEpC,IAAI6d,SAASC,QAEfC,EAAU,GACbC,EAAgB,KAEjBL,EAAa3iB,SAASoe,IAEhBA,EAAE6E,YAAa7E,EAAE6E,cACjB7E,EAAEwD,WACAa,kBAAkBne,KAAM8Z,GAG7B2E,EAAQze,KAAM8Z,OAKb2E,EAAQhnB,OAAS,CACpBinB,EAAgBD,EAAQhnB,aAElBmnB,EAAwB9E,IACzBA,GAA2B,mBAAfA,EAAE1E,UAA0B0E,EAAE1E,WAEtB,KAAlBsJ,QACAG,cAAcC,KAAMN,IAK3BC,EAAQ/iB,SAASoe,IACI,iBAATA,EAAEpN,SACP4R,eAAgBxE,GACrB8E,EAAsB9E,IAEG,iBAAVA,EAAEtW,IACjB4Z,EAAYtD,EAAEtW,KAAK,IAAMob,EAAqB9E,MAG9CiF,QAAQC,KAAM,6BAA8BlF,GAC5C8E,kBAKGC,cAAcC,KAAMN,MAW5BK,qBAEQ,IAAIN,SAASC,QAEfS,EAAejlB,OAAOklB,OAAQxe,KAAKwd,mBACnCiB,EAAsBF,EAAaxnB,UAGX,IAAxB0nB,OACEC,YAAYN,KAAMN,OAGnB,KAEAa,EAEAC,EAAuB,KACI,KAAxBH,OACAC,YAAYN,KAAMN,GAGvBa,KAIE9pB,EAAI,EAGR8pB,EAAiB,SAEZE,EAASN,EAAa1pB,QAGC,mBAAhBgqB,EAAOtf,KAAsB,KACnC+D,EAAUub,EAAOtf,KAAMS,KAAKF,QAG5BwD,GAAmC,mBAAjBA,EAAQ8a,KAC7B9a,EAAQ8a,KAAMQ,GAGdA,SAIDA,KAKFD,QAWHD,wBAEMnB,MAAQ,SAETvd,KAAKyd,kBAAkB1mB,aACrB0mB,kBAAkBziB,SAASoe,IAC/BsD,EAAYtD,EAAEtW,IAAKsW,EAAE1E,aAIhBmJ,QAAQC,UAWhBF,eAAgBiB,GAIU,IAArBllB,UAAU5C,QAAwC,iBAAjB4C,UAAU,IAC9CklB,EAASllB,UAAU,IACZqS,GAAKrS,UAAU,GAII,mBAAXklB,IACfA,EAASA,SAGN7S,EAAK6S,EAAO7S,GAEE,iBAAPA,EACVqS,QAAQC,KAAM,mDAAqDO,QAE5Bnf,IAA/BM,KAAKwd,kBAAkBxR,SAC1BwR,kBAAkBxR,GAAM6S,EAIV,WAAf7e,KAAKud,OAA6C,mBAAhBsB,EAAOtf,MAC5Csf,EAAOtf,KAAMS,KAAKF,SAInBue,QAAQC,KAAM,eAAgBtS,EAAI,wCAUpC8S,UAAW9S,WAEDhM,KAAKwd,kBAAkBxR,GAUjC+S,UAAW/S,UAEHhM,KAAKwd,kBAAkBxR,GAI/BgT,8BAEQhf,KAAKwd,mBCtOC,MAAMyB,EAEpBpf,YAAaC,QAEPA,OAASA,yBAUR0E,EAASxE,KAAKF,OAAOM,YACrBib,EAASvmB,EAAUkL,KAAKF,OAAOwE,mBlBpBR,mBkBuBvB4a,EAAoB1a,EAAOG,aAAe,aAAa3L,KAAMwL,EAAOK,iBAEpEkO,EAAY/S,KAAKF,OAAOkT,qBAAsBrT,OAAO8T,WAAY9T,OAAO+T,aAGxEyL,EAAYnjB,KAAKwf,MAAOzI,EAAU/Q,OAAU,EAAIwC,EAAOsO,SAC5DsM,EAAapjB,KAAKwf,MAAOzI,EAAUza,QAAW,EAAIkM,EAAOsO,SAGpDjJ,EAAakJ,EAAU/Q,MAC5BmI,EAAc4I,EAAUza,aAEnB,IAAIulB,QAASpjB,uBAGnBpD,EAAkB,cAAe8nB,EAAW,MAAOC,EAAY,qBAG/D/nB,EAAkB,iFAAkFwS,EAAY,kBAAmBM,EAAa,OAEhJjT,SAASqgB,gBAAgBhiB,UAAUC,IAAK,aACxC0B,SAASmoB,KAAKrpB,MAAMgM,MAAQmd,EAAY,KACxCjoB,SAASmoB,KAAKrpB,MAAMsC,OAAS8mB,EAAa,WAGpC,IAAIvB,QAASpjB,4BACdqF,OAAOwf,oBAAqBzV,EAAYM,GAI7CkR,EAAOrgB,SAASwF,GAASR,KAAKF,OAAOiJ,aAAa1G,OAAQ7B,WAGpD,IAAIqd,QAASpjB,6BAEb8kB,EAAqBlE,EAAOjc,KAAKoB,GAASA,EAAMgf,eAEhDC,EAAQ,GACRC,EAAgBrE,EAAO,GAAG7kB,WAGhC6kB,EAAOrgB,SAAS,SAAUwF,EAAOyO,OAIY,IAAxCzO,EAAMjL,UAAU8T,SAAU,SAAsB,KAE/C0N,GAASoI,EAAYtV,GAAe,EACpC8V,GAAQP,EAAajV,GAAgB,QAEnCyV,EAAgBL,EAAoBtQ,OACtC4Q,EAAgB7jB,KAAKE,IAAKF,KAAK8jB,KAAMF,EAAgBR,GAAc,GAGvES,EAAgB7jB,KAAKC,IAAK4jB,EAAerb,EAAOub,sBAG1B,IAAlBF,GAAuBrb,EAAO6J,QAAU7N,EAAMjL,UAAU8T,SAAU,aACrEsW,EAAM3jB,KAAKE,KAAOkjB,EAAaQ,GAAkB,EAAG,UAK/CI,EAAO9oB,SAASC,cAAe,UACrCsoB,EAAMngB,KAAM0gB,GAEZA,EAAK3qB,UAAY,WACjB2qB,EAAKhqB,MAAMsC,QAAa8mB,EAAa5a,EAAOyb,qBAAwBJ,EAAkB,KACtFG,EAAK5oB,YAAaoJ,GAGlBA,EAAMxK,MAAM+gB,KAAOA,EAAO,KAC1BvW,EAAMxK,MAAM2pB,IAAMA,EAAM,KACxBnf,EAAMxK,MAAMgM,MAAQ6H,EAAa,KAE7BrJ,EAAMQ,wBACTgf,EAAK7C,aAAc3c,EAAMQ,uBAAwBR,GAI9CgE,EAAO0b,UAAY,OAGhBC,EAAQngB,KAAKF,OAAOsgB,cAAe5f,MACrC2f,EAAQ,OAELE,EAAe,EACfC,EAA0C,iBAArB9b,EAAO0b,UAAyB1b,EAAO0b,UAAY,SACxEK,EAAerpB,SAASC,cAAe,OAC7CopB,EAAahrB,UAAUC,IAAK,iBAC5B+qB,EAAahrB,UAAUC,IAAK,qBAC5B+qB,EAAa7f,aAAc,cAAe4f,GAC1CC,EAAa1pB,UAAYspB,EAEL,kBAAhBG,EACHb,EAAMngB,KAAMihB,IAGZA,EAAavqB,MAAM+gB,KAAOsJ,EAAe,KACzCE,EAAavqB,MAAMwqB,OAASH,EAAe,KAC3CE,EAAavqB,MAAMgM,MAAUmd,EAAyB,EAAbkB,EAAmB,KAC5DL,EAAK5oB,YAAampB,QAQjBrB,EAAoB,OACjBva,EAAcsK,EAAQ,EACtBwR,EAAgBvpB,SAASC,cAAe,OAC9CspB,EAAclrB,UAAUC,IAAK,gBAC7BirB,EAAclrB,UAAUC,IAAK,oBAC7BirB,EAAc5pB,UAAY8N,EAC1Bqb,EAAK5oB,YAAaqpB,MAIfjc,EAAOkc,qBAAuB,OAK3BC,EAAiB3gB,KAAKF,OAAOyQ,UAAUO,KAAMkP,EAAK7qB,iBAAkB,cAAe,OAErFyrB,EAEJD,EAAe3lB,SAAS,SAAUuV,GAG7BqQ,GACHA,EAAqB5lB,SAAS,SAAUmW,GACvCA,EAAS5b,UAAUE,OAAQ,uBAK7B8a,EAAUvV,SAAS,SAAUmW,GAC5BA,EAAS5b,UAAUC,IAAK,UAAW,sBACjCwK,YAGG6gB,EAAab,EAAKc,WAAW,GACnCrB,EAAMngB,KAAMuhB,GAEZD,EAAuBrQ,IAErBvQ,MAGH2gB,EAAe3lB,SAAS,SAAUuV,GACjCA,EAAUvV,SAAS,SAAUmW,GAC5BA,EAAS5b,UAAUE,OAAQ,UAAW,+BAOxCX,EAAUkrB,EAAM,4BAA6BhlB,SAAS,SAAUmW,GAC/DA,EAAS5b,UAAUC,IAAK,iBAMzBwK,YAEG,IAAI6d,QAASpjB,uBAEnBglB,EAAMzkB,SAASglB,GAAQN,EAActoB,YAAa4oB,UAG7ClgB,OAAOjD,cAAc,CAAEtF,KAAM,cAOnCqN,sBAEU,cAAgB5L,KAAM2G,OAAO7H,SAASC,SCtMlC,MAAMgpB,EAEpBlhB,YAAaC,QAEPA,OAASA,OAGTkhB,YAAc,OACdC,YAAc,OACdC,gBAAkB,OAClBC,eAAgB,OAEhBC,cAAgBphB,KAAKohB,cAAcnhB,KAAMD,WACzCqhB,cAAgBrhB,KAAKqhB,cAAcphB,KAAMD,WACzCshB,YAActhB,KAAKshB,YAAYrhB,KAAMD,WACrCuhB,aAAevhB,KAAKuhB,aAAathB,KAAMD,WACvCwhB,YAAcxhB,KAAKwhB,YAAYvhB,KAAMD,WACrCyhB,WAAazhB,KAAKyhB,WAAWxhB,KAAMD,MAOzCC,WAEK4Z,EAAgB7Z,KAAKF,OAAOwE,mBAE5B,kBAAmB3E,QAEtBka,EAAcpW,iBAAkB,cAAezD,KAAKohB,eAAe,GACnEvH,EAAcpW,iBAAkB,cAAezD,KAAKqhB,eAAe,GACnExH,EAAcpW,iBAAkB,YAAazD,KAAKshB,aAAa,IAEvD3hB,OAAO/G,UAAU8oB,kBAEzB7H,EAAcpW,iBAAkB,gBAAiBzD,KAAKohB,eAAe,GACrEvH,EAAcpW,iBAAkB,gBAAiBzD,KAAKqhB,eAAe,GACrExH,EAAcpW,iBAAkB,cAAezD,KAAKshB,aAAa,KAIjEzH,EAAcpW,iBAAkB,aAAczD,KAAKuhB,cAAc,GACjE1H,EAAcpW,iBAAkB,YAAazD,KAAKwhB,aAAa,GAC/D3H,EAAcpW,iBAAkB,WAAYzD,KAAKyhB,YAAY,IAQ/DlN,aAEKsF,EAAgB7Z,KAAKF,OAAOwE,mBAEhCuV,EAAcnW,oBAAqB,cAAe1D,KAAKohB,eAAe,GACtEvH,EAAcnW,oBAAqB,cAAe1D,KAAKqhB,eAAe,GACtExH,EAAcnW,oBAAqB,YAAa1D,KAAKshB,aAAa,GAElEzH,EAAcnW,oBAAqB,gBAAiB1D,KAAKohB,eAAe,GACxEvH,EAAcnW,oBAAqB,gBAAiB1D,KAAKqhB,eAAe,GACxExH,EAAcnW,oBAAqB,cAAe1D,KAAKshB,aAAa,GAEpEzH,EAAcnW,oBAAqB,aAAc1D,KAAKuhB,cAAc,GACpE1H,EAAcnW,oBAAqB,YAAa1D,KAAKwhB,aAAa,GAClE3H,EAAcnW,oBAAqB,WAAY1D,KAAKyhB,YAAY,GAQjEE,iBAAkBzrB,MAGbD,EAASC,EAAQ,gBAAmB,OAAO,OAExCA,GAAyC,mBAAxBA,EAAOoK,cAA8B,IACxDpK,EAAOoK,aAAc,sBAAyB,OAAO,EACzDpK,EAASA,EAAOM,kBAGV,EAUR+qB,aAAc5d,MAET3D,KAAK2hB,iBAAkBhe,EAAMzN,QAAW,OAAO,OAE9C8qB,YAAcrd,EAAMie,QAAQ,GAAGnG,aAC/BwF,YAActd,EAAMie,QAAQ,GAAGC,aAC/BX,gBAAkBvd,EAAMie,QAAQ7qB,OAStCyqB,YAAa7d,MAER3D,KAAK2hB,iBAAkBhe,EAAMzN,QAAW,OAAO,MAE/CsO,EAASxE,KAAKF,OAAOM,eAGpBJ,KAAKmhB,cA8ED/nB,GACRuK,EAAMqQ,qBA/EmB,MACpBlU,OAAO2V,YAAa9R,OAErBme,EAAWne,EAAMie,QAAQ,GAAGnG,QAC5BsG,EAAWpe,EAAMie,QAAQ,GAAGC,WAGH,IAAzBle,EAAMie,QAAQ7qB,QAAyC,IAAzBiJ,KAAKkhB,gBAAwB,KAE1DxQ,EAAkB1Q,KAAKF,OAAO4Q,gBAAgB,CAAEsR,kBAAkB,IAElEC,EAASH,EAAW9hB,KAAKghB,YAC5BkB,EAASH,EAAW/hB,KAAKihB,YAEtBgB,EAxIgB,IAwIYjmB,KAAKmmB,IAAKF,GAAWjmB,KAAKmmB,IAAKD,SACzDf,eAAgB,EACS,WAA1B3c,EAAO8P,eACN9P,EAAOiE,SACL3I,OAAO+Q,YAGP/Q,OAAO8Q,YAIR9Q,OAAOiX,QAGLkL,GAtJW,IAsJkBjmB,KAAKmmB,IAAKF,GAAWjmB,KAAKmmB,IAAKD,SAC/Df,eAAgB,EACS,WAA1B3c,EAAO8P,eACN9P,EAAOiE,SACL3I,OAAO8Q,YAGP9Q,OAAO+Q,YAIR/Q,OAAOoX,SAGLgL,EApKW,IAoKiBxR,EAAgByG,SAC/CgK,eAAgB,EACS,WAA1B3c,EAAO8P,oBACLxU,OAAO8Q,YAGP9Q,OAAOqX,MAGL+K,GA7KW,IA6KkBxR,EAAgB0G,YAChD+J,eAAgB,EACS,WAA1B3c,EAAO8P,oBACLxU,OAAO+Q,YAGP/Q,OAAOsX,QAMV5S,EAAOsT,UACN9X,KAAKmhB,eAAiBnhB,KAAKF,OAAO8F,oBACrCjC,EAAMqQ,iBAMPrQ,EAAMqQ,mBAkBVyN,WAAY9d,QAENwd,eAAgB,EAStBC,cAAezd,GAEVA,EAAMye,cAAgBze,EAAM0e,sBAA8C,UAAtB1e,EAAMye,cAC7Dze,EAAMie,QAAU,CAAC,CAAEnG,QAAS9X,EAAM8X,QAASoG,QAASle,EAAMke,eACrDN,aAAc5d,IAUrB0d,cAAe1d,GAEVA,EAAMye,cAAgBze,EAAM0e,sBAA8C,UAAtB1e,EAAMye,cAC7Dze,EAAMie,QAAU,CAAC,CAAEnG,QAAS9X,EAAM8X,QAASoG,QAASle,EAAMke,eACrDL,YAAa7d,IAUpB2d,YAAa3d,GAERA,EAAMye,cAAgBze,EAAM0e,sBAA8C,UAAtB1e,EAAMye,cAC7Dze,EAAMie,QAAU,CAAC,CAAEnG,QAAS9X,EAAM8X,QAASoG,QAASle,EAAMke,eACrDJ,WAAY9d,KCrPL,MAAM2e,EAEpBziB,YAAaC,QAEPA,OAASA,OAETyiB,oBAAsBviB,KAAKuiB,oBAAoBtiB,KAAMD,WACrDwiB,sBAAwBxiB,KAAKwiB,sBAAsBviB,KAAMD,MAO/DuE,UAAWC,EAAQC,GAEdD,EAAOsT,cACL2K,aAGAC,aACAnO,UAKPtU,OAEKD,KAAKF,OAAOM,YAAY0X,eACtBhY,OAAOwE,mBAAmBb,iBAAkB,cAAezD,KAAKuiB,qBAAqB,GAK5FhO,cAEMzU,OAAOwE,mBAAmBZ,oBAAqB,cAAe1D,KAAKuiB,qBAAqB,GAC7FrrB,SAASwM,oBAAqB,cAAe1D,KAAKwiB,uBAAuB,GAI1EE,QA5CmB,UA8Cd1iB,KAAKud,aACHzd,OAAOwE,mBAAmB/O,UAAUC,IAAK,WAC9C0B,SAASuM,iBAAkB,cAAezD,KAAKwiB,uBAAuB,SAGlEjF,MAnDa,QAuDnBkF,OAtDkB,SAwDbziB,KAAKud,aACHzd,OAAOwE,mBAAmB/O,UAAUE,OAAQ,WACjDyB,SAASwM,oBAAqB,cAAe1D,KAAKwiB,uBAAuB,SAGrEjF,MA7DY,OAiElBjI,kBAlEmB,UAoEXtV,KAAKud,MAIbgF,oBAAqB5e,QAEf+e,QAINF,sBAAuB7e,OAElBkW,EAAgBtjB,EAASoN,EAAMzN,OAAQ,WACtC2jB,GAAiBA,IAAkB7Z,KAAKF,OAAOwE,yBAC9Cme,QCxFO,MAAME,EAEpB9iB,YAAaC,QAEPA,OAASA,EAIfuE,cAEMvO,QAAUoB,SAASC,cAAe,YAClCrB,QAAQT,UAAY,qBACpBS,QAAQ4K,aAAc,qBAAsB,SAC5C5K,QAAQ4K,aAAc,WAAY,UAClCZ,OAAOwE,mBAAmBlN,YAAa4I,KAAKlK,SAOlDyO,UAAWC,EAAQC,GAEdD,EAAO0b,gBACLpqB,QAAQ4K,aAAc,cAA2C,iBAArB8D,EAAO0b,UAAyB1b,EAAO0b,UAAY,UAWtGpb,SAEK9E,KAAKF,OAAOM,YAAY8f,WAAalgB,KAAKlK,SAAWkK,KAAKF,OAAOkF,oBAAsBhF,KAAKF,OAAO8iB,MAAMhe,uBAEvG9O,QAAQe,UAAYmJ,KAAKogB,iBAAmB,kEAYnDyC,mBAEK7iB,KAAKF,OAAOM,YAAY8f,WAAalgB,KAAK8iB,aAAe9iB,KAAKF,OAAO8iB,MAAMhe,qBACzE9E,OAAOwE,mBAAmB/O,UAAUC,IAAK,mBAGzCsK,OAAOwE,mBAAmB/O,UAAUE,OAAQ,cASnDqtB,kBAEQ9iB,KAAKF,OAAO+C,mBAAmB1N,iBAAkB,6BAA8B4B,OAAS,EAUhGgsB,+BAEUpjB,OAAO7H,SAASC,OAAOpC,MAAO,cAaxCyqB,cAAe5f,EAAQR,KAAKF,OAAOkF,sBAG9BxE,EAAMF,aAAc,qBAChBE,EAAMG,aAAc,kBAIxB4f,EAAe/f,EAAM4B,cAAe,sBACpCme,EACIA,EAAa1pB,UAGd,MCzGM,MAAMmsB,EASpBnjB,YAAanJ,EAAWusB,QAGlBC,SAAW,SACXC,UAAYnjB,KAAKkjB,SAAS,OAC1BE,UAAY,OAGZC,SAAU,OAGVjR,SAAW,OAGXkR,eAAiB,OAEjB5sB,UAAYA,OACZusB,cAAgBA,OAEhBM,OAASrsB,SAASC,cAAe,eACjCosB,OAAOluB,UAAY,gBACnBkuB,OAAOvhB,MAAQhC,KAAKkjB,cACpBK,OAAOjrB,OAAS0H,KAAKkjB,cACrBK,OAAOvtB,MAAMgM,MAAQhC,KAAKmjB,UAAY,UACtCI,OAAOvtB,MAAMsC,OAAS0H,KAAKmjB,UAAY,UACvCK,QAAUxjB,KAAKujB,OAAOE,WAAY,WAElC/sB,UAAUU,YAAa4I,KAAKujB,aAE5Blf,SAINqf,WAAYpuB,SAELquB,EAAa3jB,KAAKqjB,aAEnBA,QAAU/tB,GAGVquB,GAAc3jB,KAAKqjB,aAClBO,eAGAvf,SAKPuf,gBAEOC,EAAiB7jB,KAAKoS,cAEvBA,SAAWpS,KAAKijB,gBAIjBY,EAAiB,IAAO7jB,KAAKoS,SAAW,UACtCkR,eAAiBtjB,KAAKoS,eAGvB/N,SAEDrE,KAAKqjB,SACR5oB,sBAAuBuF,KAAK4jB,QAAQ3jB,KAAMD,OAQ5CqE,aAEK+N,EAAWpS,KAAKqjB,QAAUrjB,KAAKoS,SAAW,EAC7C0R,EAAW9jB,KAAKmjB,UAAcnjB,KAAKojB,UACnCnW,EAAIjN,KAAKmjB,UACTjW,EAAIlN,KAAKmjB,UACTY,EAAW,QAGPT,gBAAgD,IAA5B,EAAItjB,KAAKsjB,sBAE5BU,GAAehoB,KAAKioB,GAAK,EAAQ7R,GAAuB,EAAVpW,KAAKioB,IACnDC,GAAiBloB,KAAKioB,GAAK,EAAQjkB,KAAKsjB,gBAA6B,EAAVtnB,KAAKioB,SAEjET,QAAQW,YACRX,QAAQY,UAAW,EAAG,EAAGpkB,KAAKkjB,SAAUljB,KAAKkjB,eAG7CM,QAAQa,iBACRb,QAAQc,IAAKrX,EAAGC,EAAG4W,EAAS,EAAG,EAAa,EAAV9nB,KAAKioB,IAAQ,QAC/CT,QAAQe,UAAY,4BACpBf,QAAQgB,YAGRhB,QAAQa,iBACRb,QAAQc,IAAKrX,EAAGC,EAAG4W,EAAQ,EAAa,EAAV9nB,KAAKioB,IAAQ,QAC3CT,QAAQiB,UAAYzkB,KAAKojB,eACzBI,QAAQkB,YAAc,kCACtBlB,QAAQmB,SAET3kB,KAAKqjB,eAEHG,QAAQa,iBACRb,QAAQc,IAAKrX,EAAGC,EAAG4W,EAAQI,EAAYF,GAAU,QACjDR,QAAQiB,UAAYzkB,KAAKojB,eACzBI,QAAQkB,YAAc,YACtBlB,QAAQmB,eAGTnB,QAAQ5W,UAAWK,EAAM8W,GAAgB7W,EAAM6W,IAGhD/jB,KAAKqjB,cACHG,QAAQe,UAAY,YACpBf,QAAQoB,SAAU,EAAG,EAAGb,GAAkBA,QAC1CP,QAAQoB,SAAUb,GAAkB,EAAGA,GAAkBA,UAGzDP,QAAQa,iBACRb,QAAQ5W,UAAW,EAAG,QACtB4W,QAAQqB,OAAQ,EAAG,QACnBrB,QAAQsB,OAAQf,GAAcA,SAC9BP,QAAQsB,OAAQ,EAAGf,QACnBP,QAAQe,UAAY,YACpBf,QAAQgB,aAGThB,QAAQuB,UAIdC,GAAIztB,EAAM0tB,QACJ1B,OAAO9f,iBAAkBlM,EAAM0tB,GAAU,GAG/CC,IAAK3tB,EAAM0tB,QACL1B,OAAO7f,oBAAqBnM,EAAM0tB,GAAU,GAGlD7nB,eAEMimB,SAAU,EAEXrjB,KAAKujB,OAAO/sB,iBACVE,UAAU2V,YAAarM,KAAKujB,SC5JpC,MAAe,CAIdvhB,MAAO,IACP1J,OAAQ,IAGRwa,OAAQ,IAGRqS,SAAU,GACVC,SAAU,EAGV5hB,UAAU,EAIVqX,kBAAkB,EAGlBN,eAAgB,eAIhBC,mBAAoB,QAGpBpI,UAAU,EAgBVzN,aAAa,EAMbE,gBAAiB,MAIjBmU,mBAAmB,EAInBT,MAAM,EAGN8M,sBAAsB,EAGtBpM,SAAS,EAGT1C,UAAU,EAMVlB,kBAAmB,KAInBiQ,eAAe,EAGf5S,UAAU,EAGVrE,QAAQ,EAGRkX,OAAO,EAGPC,MAAM,EAGN/c,KAAK,EA0BL6L,eAAgB,UAGhBmR,SAAS,EAGTlV,WAAW,EAIX8B,eAAe,EAIfyF,UAAU,EAIV4N,MAAM,EAGNvhB,OAAO,EAGP+b,WAAW,EAGXyF,kBAAkB,EAMlBziB,cAAe,KAOf7C,eAAgB,KAGhB8K,aAAa,EAIb0D,mBAAoB,KAIpBhB,kBAAmB,OACnBC,oBAAqB,EACrBrC,sBAAsB,EAKtBiD,kBAAmB,CAClB,UACA,QACA,mBACA,UACA,YACA,cACA,iBACA,eACA,eACA,gBACA,UACA,kBAQDkX,UAAW,EAGX5N,oBAAoB,EAGpB6N,gBAAiB,KAKjBC,cAAe,KAGf7J,YAAY,EAKZ8J,cAAc,EAGd/hB,aAAa,EAGbgiB,mBAAmB,EAGnBC,iCAAiC,EAGjCC,WAAY,QAGZC,gBAAiB,UAGjBpe,qBAAsB,OAGtBX,wBAAyB,GAGzBE,uBAAwB,GAGxBE,yBAA0B,GAG1BE,2BAA4B,GAG5BsC,6BAA8B,KAC9BK,2BAA4B,KAI5B0V,oBAAqB/I,OAAOoP,kBAG5B1F,sBAAsB,EAOtBT,qBAAsB,EAGtBoG,aAAc,EAKdC,mBAAoB,EAGpB7pB,QAAS,QAGTyf,oBAAoB,EAGpBI,eAAgB,IAGhBqB,aAAc,GAGdD,QAAS,IC7PK,WAAU7D,EAAe5a,GAInCtF,UAAU5C,OAAS,IACtBkI,EAAUtF,UAAU,GACpBkgB,EAAgB3iB,SAASkL,cAAe,kBAGnCtC,EAAS,OASdymB,EACAC,EAGAC,EACAne,EAiCAoe,EA5CGliB,EAAS,GAGZmiB,GAAQ,EAWRC,EAAoB,CACnB7L,0BAA0B,EAC1BD,wBAAwB,GAMzByC,EAAQ,GAGR1Q,EAAQ,EAIRga,EAAkB,CAAExkB,OAAQ,GAAIqQ,SAAU,IAG1CoU,EAAM,GAMNZ,EAAa,OAGbN,EAAY,EAIZmB,EAAmB,EACnBC,GAAsB,EACtBC,GAAkB,EAKlBle,EAAe,IAAInJ,EAAcE,GACjC6E,EAAc,IAAIP,EAAatE,GAC/BqL,EAAc,IAAIZ,EAAazK,GAC/BonB,EAAc,IAAIpgB,EAAahH,GAC/ByQ,GAAY,IAAID,EAAWxQ,GAC3B4S,GAAW,IAAIH,EAAUzS,GACzByW,GAAW,IAAItC,EAAUnU,GACzBhI,GAAW,IAAIqgB,EAAUrY,GACzB0D,GAAW,IAAI8V,EAAUxZ,GACzBsS,GAAW,IAAI4I,EAAUlb,GACzBqnB,GAAU,IAAIxL,EAAS7b,GACvB4d,GAAU,IAAIL,EAASvd,GACvB8iB,GAAQ,IAAI3D,EAAOnf,GACnB4iB,GAAQ,IAAIJ,EAAOxiB,GACnBylB,GAAQ,IAAIxE,EAAOjhB,GACnBqgB,GAAQ,IAAIwC,EAAO7iB,YAKXsnB,GAAYC,UAGpBP,EAAIQ,QAAUzN,EACdiN,EAAIzL,OAASxB,EAAczX,cAAe,WAS1CoC,EAAS,IAAK+iB,KAAkB/iB,KAAWvF,KAAYooB,KAAgBG,KAEvEC,KAGA9nB,OAAO8D,iBAAkB,OAAQpB,IAAQ,GAGzCqb,GAAQnd,KAAMiE,EAAOkZ,QAASlZ,EAAOmZ,cAAeS,KAAMsJ,IAEnD,IAAI7J,SAASC,GAAWhe,EAAOklB,GAAI,QAASlH,cAQ3C2J,MAGgB,IAApBjjB,EAAOsT,SACVgP,EAAIa,SAAWH,EAAc3N,EAAe,qBAAwBA,GAIpEiN,EAAIa,SAAWzwB,SAASmoB,KACxBnoB,SAASqgB,gBAAgBhiB,UAAUC,IAAK,qBAGzCsxB,EAAIa,SAASpyB,UAAUC,IAAK,4BAQpBkyB,KAERf,GAAQ,EAGRiB,KAGAC,KAGAC,KAGAC,KAGAC,KAGAzjB,KAGAzM,GAASwgB,UAGT4O,EAAYpiB,QAAQ,GAIpBzG,YAAY,KAEXyoB,EAAIzL,OAAO9lB,UAAUE,OAAQ,iBAE7BqxB,EAAIQ,QAAQ/xB,UAAUC,IAAK,SAE3BqH,GAAc,CACbtF,KAAM,QACNsQ,KAAM,CACL0e,OAAAA,EACAC,OAAAA,EACAle,aAAAA,OAGA,GAGCsa,GAAMhe,kBACTqjB,KAI4B,aAAxB/wB,SAASkM,WACZwf,GAAMsF,WAGNvoB,OAAO8D,iBAAkB,QAAQ,KAChCmf,GAAMsF,wBAeDN,KAEHpjB,EAAOmhB,kBACX6B,EAAeV,EAAIQ,QAAS,qCAAsCtsB,SAASwF,IAC1EA,EAAMhK,WAAW6V,YAAa7L,eAWxBqnB,KAGRf,EAAIzL,OAAO9lB,UAAUC,IAAK,iBAEtB2yB,EACHrB,EAAIQ,QAAQ/xB,UAAUC,IAAK,YAG3BsxB,EAAIQ,QAAQ/xB,UAAUE,OAAQ,YAG/ByxB,EAAY7iB,SACZM,EAAYN,SACZb,GAASa,SACT+N,GAAS/N,SACT8b,GAAM9b,SAGNyiB,EAAIsB,aAAeZ,EAA0BV,EAAIQ,QAAS,MAAO,gBAAiB9iB,EAAOhB,SAAW,6DAA+D,MAEnKsjB,EAAIuB,cAAgBC,KAEpBxB,EAAIQ,QAAQ5mB,aAAc,OAAQ,wBAU1B4nB,SAEJD,EAAgBvB,EAAIQ,QAAQllB,cAAe,uBAC1CimB,IACJA,EAAgBnxB,SAASC,cAAe,OACxCkxB,EAAcryB,MAAMuyB,SAAW,WAC/BF,EAAcryB,MAAMsC,OAAS,MAC7B+vB,EAAcryB,MAAMgM,MAAQ,MAC5BqmB,EAAcryB,MAAMwyB,SAAW,SAC/BH,EAAcryB,MAAMyyB,KAAO,6BAC3BJ,EAAc9yB,UAAUC,IAAK,eAC7B6yB,EAAc3nB,aAAc,YAAa,UACzC2nB,EAAc3nB,aAAc,cAAc,QAC1ComB,EAAIQ,QAAQlwB,YAAaixB,IAEnBA,WAOCvW,GAAgBxc,GAExBwxB,EAAIuB,cAAc/Y,YAAcha,WASxByc,GAAe9a,OAEnByxB,EAAO,MAGW,IAAlBzxB,EAAK0xB,SACRD,GAAQzxB,EAAKqY,iBAGT,GAAsB,IAAlBrY,EAAK0xB,SAAiB,KAE1BC,EAAe3xB,EAAK0J,aAAc,eAClCkoB,EAAiE,SAA/ClpB,OAAOpD,iBAAkBtF,GAAzB,QACD,SAAjB2xB,GAA4BC,GAE/B5zB,MAAMC,KAAM+B,EAAK0R,YAAa3N,SAAS8tB,IACtCJ,GAAQ3W,GAAe+W,aAO1BJ,EAAOA,EAAKjnB,OAEI,KAATinB,EAAc,GAAKA,EAAO,aAazBX,KAERgB,aAAa,KACkB,IAA1BjC,EAAIQ,QAAQ0B,WAA8C,IAA3BlC,EAAIQ,QAAQ2B,aAC9CnC,EAAIQ,QAAQ0B,UAAY,EACxBlC,EAAIQ,QAAQ2B,WAAa,KAExB,cAcKnB,KAEJtjB,EAAOR,aACVrE,OAAO8D,iBAAkB,WAAWE,QAC/BkE,EAAOlE,EAAMkE,QAGG,iBAATA,GAA0C,MAArBA,EAAKrB,OAAQ,IAAkD,MAAnCqB,EAAKrB,OAAQqB,EAAK9Q,OAAS,KACtF8Q,EAAOqhB,KAAKC,MAAOthB,GAGfA,EAAKlJ,QAAyC,mBAAxBmB,EAAO+H,EAAKlJ,aAEqB,IAAtDnK,EAA8BwE,KAAM6O,EAAKlJ,QAAqB,OAE3DwR,EAASrQ,EAAO+H,EAAKlJ,QAAQkY,MAAO/W,EAAQ+H,EAAKuhB,MAIvDC,GAAqB,WAAY,CAAE1qB,OAAQkJ,EAAKlJ,OAAQwR,OAAQA,SAIhEkO,QAAQC,KAAM,eAAgBzW,EAAKlJ,OAAQ,mDAK5C,YAWI4F,GAAWtF,SAEbwF,EAAY,IAAKD,MAIA,iBAAZvF,GAAuBuoB,EAAahjB,EAAQvF,IAI7B,IAAtBa,EAAOwpB,UAAuB,aAE5BC,EAAiBzC,EAAIQ,QAAQnyB,iBxBlbN,mBwBkb0C4B,OAGvE+vB,EAAIQ,QAAQ/xB,UAAUE,OAAQgP,EAAUyhB,YACxCY,EAAIQ,QAAQ/xB,UAAUC,IAAKgP,EAAO0hB,YAElCY,EAAIQ,QAAQ5mB,aAAc,wBAAyB8D,EAAO2hB,iBAC1DW,EAAIQ,QAAQ5mB,aAAc,6BAA8B8D,EAAOuD,sBAG/D+e,EAAIa,SAAS3xB,MAAMwzB,YAAa,gBAAiBhlB,EAAOxC,MAAQ,MAChE8kB,EAAIa,SAAS3xB,MAAMwzB,YAAa,iBAAkBhlB,EAAOlM,OAAS,MAE9DkM,EAAOihB,SACVA,KAGD+B,EAAkBV,EAAIQ,QAAS,WAAY9iB,EAAOsT,UAClD0P,EAAkBV,EAAIQ,QAAS,MAAO9iB,EAAOiE,KAC7C+e,EAAkBV,EAAIQ,QAAS,SAAU9iB,EAAO6J,SAG3B,IAAjB7J,EAAOL,OACVslB,KAIGjlB,EAAOuhB,cACV2D,KACAC,GAAqB,+BAGrBA,KACAD,GAAoB,uDAIrBve,EAAYR,QAGR+b,IACHA,EAAgBtpB,UAChBspB,EAAkB,MAIf6C,EAAiB,GAAK/kB,EAAOohB,WAAaphB,EAAOwT,qBACpD0O,EAAkB,IAAI1D,EAAU8D,EAAIQ,SAAS,IACrCtrB,KAAKC,IAAKD,KAAKE,KAAOqgB,KAAKC,MAAQwK,GAAuBpB,EAAW,GAAK,KAGlFc,EAAgB1B,GAAI,QAAS4E,IAC7B3C,GAAkB,GAIW,YAA1BziB,EAAO8P,eACVwS,EAAIQ,QAAQ5mB,aAAc,uBAAwB8D,EAAO8P,gBAGzDwS,EAAIQ,QAAQ1mB,gBAAiB,wBAG9Buf,GAAM5b,UAAWC,EAAQC,GACzBie,GAAMne,UAAWC,EAAQC,GACzB0iB,GAAQ5iB,UAAWC,EAAQC,GAC3BjB,GAASe,UAAWC,EAAQC,GAC5B2N,GAAS7N,UAAWC,EAAQC,GAC5B8R,GAAShS,UAAWC,EAAQC,GAC5B8L,GAAUhM,UAAWC,EAAQC,GAC7BE,EAAYJ,UAAWC,EAAQC,GAE/BmD,cAOQiiB,KAIRlqB,OAAO8D,iBAAkB,SAAUqmB,IAAgB,GAE/CtlB,EAAO+gB,OAAQA,GAAMtlB,OACrBuE,EAAO+R,UAAWA,GAAStW,OAC3BuE,EAAO4N,UAAWA,GAASnS,OAC3BuE,EAAO6gB,sBAAuBvtB,GAASmI,OAC3CuD,GAASvD,OACTyiB,GAAMziB,OAEN6mB,EAAIzL,OAAO5X,iBAAkB,gBAAiBsmB,IAAiB,GAC/DjD,EAAIsB,aAAa3kB,iBAAkB,QAASgmB,IAAQ,GAEhDjlB,EAAOyhB,iCACV/uB,SAASuM,iBAAkB,mBAAoBumB,IAAwB,YAQhE/B,KAIR1C,GAAMhR,SACNmO,GAAMnO,SACNgC,GAAShC,SACT/Q,GAAS+Q,SACTnC,GAASmC,SACTzc,GAASyc,SAET5U,OAAO+D,oBAAqB,SAAUomB,IAAgB,GAEtDhD,EAAIzL,OAAO3X,oBAAqB,gBAAiBqmB,IAAiB,GAClEjD,EAAIsB,aAAa1kB,oBAAqB,QAAS+lB,IAAQ,YAQ/CzE,GAAIztB,EAAM0tB,EAAUgF,GAE5BpQ,EAAcpW,iBAAkBlM,EAAM0tB,EAAUgF,YAOxC/E,GAAK3tB,EAAM0tB,EAAUgF,GAE7BpQ,EAAcnW,oBAAqBnM,EAAM0tB,EAAUgF,YAW3CtW,GAAiBuW,GAGQ,iBAAtBA,EAAW7nB,SAAsBwkB,EAAgBxkB,OAAS6nB,EAAW7nB,QAC7C,iBAAxB6nB,EAAWxX,WAAwBmU,EAAgBnU,SAAWwX,EAAWxX,UAGhFmU,EAAgBxkB,OACnBmlB,EAAuBV,EAAIzL,OAAQwL,EAAgBxkB,OAAS,IAAMwkB,EAAgBnU,UAGlF8U,EAAuBV,EAAIzL,OAAQwL,EAAgBnU,mBAS5C7V,IAAc3G,OAAEA,EAAO4wB,EAAIQ,QAAb/vB,KAAsBA,EAAtBsQ,KAA4BA,EAA5BmK,QAAkCA,GAAQ,QAE5DrO,EAAQzM,SAASizB,YAAa,aAAc,EAAG,GACnDxmB,EAAMymB,UAAW7yB,EAAMya,GAAS,GAChCwV,EAAa7jB,EAAOkE,GACpB3R,EAAO2G,cAAe8G,GAElBzN,IAAW4wB,EAAIQ,SAGlB+B,GAAqB9xB,YAQd8xB,GAAqB9xB,EAAMsQ,MAE/BrD,EAAOwhB,mBAAqBrmB,OAAO0qB,SAAW1qB,OAAO2qB,KAAO,KAC3DC,EAAU,CACbC,UAAW,SACX9P,UAAWnjB,EACXgmB,MAAOkN,MAGRjD,EAAa+C,EAAS1iB,GAEtBlI,OAAO0qB,OAAOrmB,YAAaklB,KAAKwB,UAAWH,GAAW,eAU/Cb,GAAoB10B,EAAW,KAEvCC,MAAMC,KAAM4xB,EAAIQ,QAAQnyB,iBAAkBH,IAAagG,SAASlF,IAC3D,gBAAgBkD,KAAMlD,EAAQ6K,aAAc,UAC/C7K,EAAQ2N,iBAAkB,QAASknB,IAAsB,eASnDhB,GAAqB30B,EAAW,KAExCC,MAAMC,KAAM4xB,EAAIQ,QAAQnyB,iBAAkBH,IAAagG,SAASlF,IAC3D,gBAAgBkD,KAAMlD,EAAQ6K,aAAc,UAC/C7K,EAAQ4N,oBAAqB,QAASinB,IAAsB,eAWtDC,GAAa9kB,GAErBoS,KAEA4O,EAAI+D,QAAU3zB,SAASC,cAAe,OACtC2vB,EAAI+D,QAAQt1B,UAAUC,IAAK,WAC3BsxB,EAAI+D,QAAQt1B,UAAUC,IAAK,mBAC3BsxB,EAAIQ,QAAQlwB,YAAa0vB,EAAI+D,SAE7B/D,EAAI+D,QAAQh0B,UACV,iHAE4BiP,6JAIbA,uNAMjBghB,EAAI+D,QAAQzoB,cAAe,UAAWqB,iBAAkB,QAAQE,IAC/DmjB,EAAI+D,QAAQt1B,UAAUC,IAAK,aACzB,GAEHsxB,EAAI+D,QAAQzoB,cAAe,UAAWqB,iBAAkB,SAASE,IAChEuU,KACAvU,EAAMqQ,oBACJ,GAEH8S,EAAI+D,QAAQzoB,cAAe,aAAcqB,iBAAkB,SAASE,IACnEuU,QACE,YAWK9C,GAAYrB,GAEI,kBAAbA,EACVA,EAAW+W,KAAa5S,KAGpB4O,EAAI+D,QACP3S,KAGA4S,cAQMA,QAEJtmB,EAAOkhB,KAAO,CAEjBxN,KAEA4O,EAAI+D,QAAU3zB,SAASC,cAAe,OACtC2vB,EAAI+D,QAAQt1B,UAAUC,IAAK,WAC3BsxB,EAAI+D,QAAQt1B,UAAUC,IAAK,gBAC3BsxB,EAAIQ,QAAQlwB,YAAa0vB,EAAI+D,aAEzBE,EAAO,+CAEP7W,EAAYqC,GAASvB,eACxBb,EAAWoC,GAAStB,cAErB8V,GAAQ,yCACH,IAAIlxB,KAAOqa,EACf6W,GAAS,WAAUlxB,aAAeqa,EAAWra,mBAIzC,IAAI4a,KAAWN,EACfA,EAASM,GAAS5a,KAAOsa,EAASM,GAASG,cAC9CmW,GAAS,WAAU5W,EAASM,GAAS5a,eAAesa,EAASM,GAASG,yBAIxEmW,GAAQ,WAERjE,EAAI+D,QAAQh0B,UAAa,oLAKOk0B,kCAIhCjE,EAAI+D,QAAQzoB,cAAe,UAAWqB,iBAAkB,SAASE,IAChEuU,KACAvU,EAAMqQ,oBACJ,aASIkE,aAEJ4O,EAAI+D,UACP/D,EAAI+D,QAAQr0B,WAAW6V,YAAaya,EAAI+D,SACxC/D,EAAI+D,QAAU,MACP,YAWAxoB,QAEJykB,EAAIQ,UAAY1E,GAAMhe,gBAAkB,KAEtCJ,EAAO8gB,cAAgB,CAQvB6C,IAAoB3jB,EAAOsT,UAC9B5gB,SAASqgB,gBAAgBvhB,MAAMwzB,YAAa,OAA+B,IAArB7pB,OAAO+T,YAAuB,YAG/EsX,EAAOhY,KAEPiY,EAAWpe,EAGjByS,GAAqB9a,EAAOxC,MAAOwC,EAAOlM,QAE1CwuB,EAAIzL,OAAOrlB,MAAMgM,MAAQgpB,EAAKhpB,MAAQ,KACtC8kB,EAAIzL,OAAOrlB,MAAMsC,OAAS0yB,EAAK1yB,OAAS,KAGxCuU,EAAQ7Q,KAAKC,IAAK+uB,EAAKE,kBAAoBF,EAAKhpB,MAAOgpB,EAAKG,mBAAqBH,EAAK1yB,QAGtFuU,EAAQ7Q,KAAKE,IAAK2Q,EAAOrI,EAAO2gB,UAChCtY,EAAQ7Q,KAAKC,IAAK4Q,EAAOrI,EAAO4gB,UAGlB,IAAVvY,GACHia,EAAIzL,OAAOrlB,MAAMo1B,KAAO,GACxBtE,EAAIzL,OAAOrlB,MAAM+gB,KAAO,GACxB+P,EAAIzL,OAAOrlB,MAAM2pB,IAAM,GACvBmH,EAAIzL,OAAOrlB,MAAMwqB,OAAS,GAC1BsG,EAAIzL,OAAOrlB,MAAMkhB,MAAQ,GACzBvD,GAAiB,CAAEtR,OAAQ,MAQvBwK,EAAQ,GAAKsb,GAAuBxoB,OAAO0rB,iBAAmB,GACjEvE,EAAIzL,OAAOrlB,MAAMo1B,KAAOve,EACxBia,EAAIzL,OAAOrlB,MAAM+gB,KAAO,GACxB+P,EAAIzL,OAAOrlB,MAAM2pB,IAAM,GACvBmH,EAAIzL,OAAOrlB,MAAMwqB,OAAS,GAC1BsG,EAAIzL,OAAOrlB,MAAMkhB,MAAQ,GACzBvD,GAAiB,CAAEtR,OAAQ,OAO3BykB,EAAIzL,OAAOrlB,MAAMo1B,KAAO,GACxBtE,EAAIzL,OAAOrlB,MAAM+gB,KAAO,MACxB+P,EAAIzL,OAAOrlB,MAAM2pB,IAAM,MACvBmH,EAAIzL,OAAOrlB,MAAMwqB,OAAS,OAC1BsG,EAAIzL,OAAOrlB,MAAMkhB,MAAQ,OACzBvD,GAAiB,CAAEtR,OAAQ,+BAAgCwK,EAAO,aAK9DwO,EAASpmB,MAAMC,KAAM4xB,EAAIQ,QAAQnyB,iBxBr2BZ,wBwBu2BtB,IAAIN,EAAI,EAAGy2B,EAAMjQ,EAAOtkB,OAAQlC,EAAIy2B,EAAKz2B,IAAM,OAC7C2L,EAAQ6a,EAAQxmB,GAGM,SAAxB2L,EAAMxK,MAAMyG,UAIZ+H,EAAO6J,QAAU7N,EAAMjL,UAAU8T,SAAU,UAG1C7I,EAAMjL,UAAU8T,SAAU,SAC7B7I,EAAMxK,MAAM2pB,IAAM,EAGlBnf,EAAMxK,MAAM2pB,IAAM3jB,KAAKE,KAAO8uB,EAAK1yB,OAASkI,EAAMgf,cAAiB,EAAG,GAAM,KAI7Ehf,EAAMxK,MAAM2pB,IAAM,IAKhBsL,IAAape,GAChBhQ,GAAc,CACbtF,KAAM,SACNsQ,KAAM,CACLojB,SAAAA,EACApe,MAAAA,EACAme,KAAAA,KAMJ5Y,GAAStN,SACToiB,EAAY5d,iBAERoJ,GAASC,YACZD,GAAS5N,mBAcHwa,GAAqBtd,EAAO1J,GAGpCkvB,EAAeV,EAAIzL,OAAQ,4CAA6CrgB,SAASlF,QAG5Ey1B,EAAkB/D,EAAyB1xB,EAASwC,MAGpD,gBAAgBU,KAAMlD,EAAQsZ,UAAa,OACxCoc,EAAK11B,EAAQ21B,cAAgB31B,EAAQ41B,WACxCC,EAAK71B,EAAQ81B,eAAiB91B,EAAQ+1B,YAEnCC,EAAK9vB,KAAKC,IAAK+F,EAAQwpB,EAAID,EAAkBI,GAEnD71B,EAAQE,MAAMgM,MAAUwpB,EAAKM,EAAO,KACpCh2B,EAAQE,MAAMsC,OAAWqzB,EAAKG,EAAO,UAIrCh2B,EAAQE,MAAMgM,MAAQA,EAAQ,KAC9BlM,EAAQE,MAAMsC,OAASizB,EAAkB,iBAenCvY,GAAsBkY,EAAmBC,SAE3CH,EAAO,CAEZhpB,MAAOwC,EAAOxC,MACd1J,OAAQkM,EAAOlM,OAGf4yB,kBAAmBA,GAAqBpE,EAAIQ,QAAQxd,YACpDqhB,mBAAoBA,GAAsBrE,EAAIQ,QAAQ7uB,qBAIvDuyB,EAAKE,mBAAuBF,EAAKE,kBAAoB1mB,EAAOsO,OAC5DkY,EAAKG,oBAAwBH,EAAKG,mBAAqB3mB,EAAOsO,OAGpC,iBAAfkY,EAAKhpB,OAAsB,KAAKhJ,KAAMgyB,EAAKhpB,SACrDgpB,EAAKhpB,MAAQuE,SAAUykB,EAAKhpB,MAAO,IAAO,IAAMgpB,EAAKE,mBAI3B,iBAAhBF,EAAK1yB,QAAuB,KAAKU,KAAMgyB,EAAK1yB,UACtD0yB,EAAK1yB,OAASiO,SAAUykB,EAAK1yB,OAAQ,IAAO,IAAM0yB,EAAKG,oBAGjDH,WAYCe,GAA0BC,EAAOnmB,GAEpB,iBAAVmmB,GAAoD,mBAAvBA,EAAMtrB,cAC7CsrB,EAAMtrB,aAAc,uBAAwBmF,GAAK,YAY1ComB,GAA0BD,MAEb,iBAAVA,GAAoD,mBAAvBA,EAAMtrB,cAA+BsrB,EAAMz2B,UAAU8T,SAAU,SAAY,OAE5G6iB,EAAgBF,EAAM1rB,aAAc,qBAAwB,oBAAsB,8BAEjFiG,SAAUylB,EAAMrrB,aAAcurB,IAAmB,EAAG,WAGrD,WAYCtmB,GAAiBpF,EAAQ8H,UAE1B9H,GAASA,EAAMhK,cAAgBgK,EAAMhK,WAAW4Y,SAASzZ,MAAO,qBAQ/Dw2B,cAEJ7jB,IAAgB1C,GAAiB0C,MAEhCA,EAAa8jB,4BAaVC,YAEU,IAAX9F,GAA2B,IAAXC,WAUf8F,aAEJhkB,KAECA,EAAa8jB,sBAGbxmB,GAAiB0C,KAAkBA,EAAa9R,WAAW41B,8BAaxDjoB,QAEJK,EAAOL,MAAQ,OACZooB,EAAYzF,EAAIQ,QAAQ/xB,UAAU8T,SAAU,UAElDuJ,KACAkU,EAAIQ,QAAQ/xB,UAAUC,IAAK,WAET,IAAd+2B,GACH1vB,GAAc,CAAEtF,KAAM,qBAShBkyB,WAEF8C,EAAYzF,EAAIQ,QAAQ/xB,UAAU8T,SAAU,UAClDyd,EAAIQ,QAAQ/xB,UAAUE,OAAQ,UAE9Boe,KAEI0Y,GACH1vB,GAAc,CAAEtF,KAAM,qBAQf8f,GAAatD,GAEG,kBAAbA,EACVA,EAAW5P,KAAUslB,KAGrBjT,KAAaiT,KAAWtlB,cAUjBqS,YAEDsQ,EAAIQ,QAAQ/xB,UAAU8T,SAAU,mBAW/B4O,GAAiBlE,GAED,kBAAbA,EACVA,EAAWyY,KAAoBC,KAI/BxF,EAAkBuF,KAAoBC,cAU/BjX,cAEGoQ,GAAcqB,YAejBzmB,GAAOkF,EAAGG,EAAGjL,EAAG8xB,GAGxBjG,EAAgBne,QAGVmB,EAAmBqd,EAAIQ,QAAQnyB,iBxB5qCG,sBwB+qCR,IAA5BsU,EAAiB1S,OAAe,YAI1B2I,IAANmG,GAAoB6M,GAASC,aAChC9M,EAAIomB,GAA0BxiB,EAAkB/D,KAK7C+gB,GAAiBA,EAAcjwB,YAAciwB,EAAcjwB,WAAWjB,UAAU8T,SAAU,UAC7F0iB,GAA0BtF,EAAcjwB,WAAYgwB,SAI/CmG,EAAcpP,EAAMlN,SAG1BkN,EAAMxmB,OAAS,MAEX61B,EAAerG,GAAU,EAC5BsG,EAAerG,GAAU,EAG1BD,EAASuG,GxBvsC+B,uBwBusCiBptB,IAANgG,EAAkB6gB,EAAS7gB,GAC9E8gB,EAASsG,GxBvsC6B,uCwBusCiBptB,IAANmG,EAAkB2gB,EAAS3gB,OAGxEknB,EAAiBxG,IAAWqG,GAAgBpG,IAAWqG,EAGtDE,IAAetG,EAAgB,UAIhCuG,EAAyBvjB,EAAkB8c,GAC9C0G,EAAwBD,EAAuB73B,iBAAkB,WAGlEmT,EAAe2kB,EAAuBzG,IAAYwG,MAE9CE,GAAwB,EAGxBH,GAAgBtG,GAAiBne,IAAiBoK,GAASC,aAQ1D8T,EAAcnmB,aAAc,sBAAyBgI,EAAahI,aAAc,sBAC/EmmB,EAAc9lB,aAAc,0BAA6B2H,EAAa3H,aAAc,2BAC/E4lB,EAASqG,GAAgBpG,EAASqG,EAAiBvkB,EAAeme,GAAgBnmB,aAAc,+BAEzG4sB,GAAwB,EACxBpG,EAAIzL,OAAO9lB,UAAUC,IAAK,8BAG3B0wB,EAAa,WAKd/S,KAEA9Q,KAGIqQ,GAASC,YACZD,GAAS5N,cAIO,IAANlK,GACV2V,GAAU0B,KAAMrX,GAMb6rB,GAAiBA,IAAkBne,IACtCme,EAAclxB,UAAUE,OAAQ,WAChCgxB,EAAc/lB,aAAc,cAAe,QAGvC2rB,MAEHhuB,YAAY,KACX8uB,KAAoBnyB,SAASwF,IAC5BurB,GAA0BvrB,EAAO,QAEhC,IAKL4sB,EAAW,IAAK,IAAIv4B,EAAI,EAAGy2B,EAAM/N,EAAMxmB,OAAQlC,EAAIy2B,EAAKz2B,IAAM,KAGxD,IAAIw4B,EAAI,EAAGA,EAAIV,EAAY51B,OAAQs2B,OACnCV,EAAYU,KAAO9P,EAAM1oB,GAAK,CACjC83B,EAAYW,OAAQD,EAAG,YACdD,EAIXtG,EAAIa,SAASpyB,UAAUC,IAAK+nB,EAAM1oB,IAGlCgI,GAAc,CAAEtF,KAAMgmB,EAAM1oB,UAItB83B,EAAY51B,QAClB+vB,EAAIa,SAASpyB,UAAUE,OAAQk3B,EAAYx0B,OAGxC40B,GACHlwB,GAAc,CACbtF,KAAM,eACNsQ,KAAM,CACL0e,OAAAA,EACAC,OAAAA,EACAC,cAAAA,EACAne,aAAAA,EACAilB,OAAQb,MAMPK,GAAiBtG,IACpB1d,EAAa9E,oBAAqBwiB,GAClC1d,EAAa/F,qBAAsBsF,IAMpC7N,uBAAuB,KACtBqX,GAAgBC,GAAezJ,OAGhC8J,GAAStN,SACTtB,GAASsB,SACTqb,GAAMrb,SACNoiB,EAAYpiB,SACZoiB,EAAY5d,iBACZ3E,EAAYG,SACZyL,GAAUzL,SAGVhN,GAASwa,WAETuB,KAGIqZ,IAEH7uB,YAAY,KACXyoB,EAAIzL,OAAO9lB,UAAUE,OAAQ,+BAC3B,GAEC+O,EAAO2G,aAEVA,EAAYX,IAAKic,EAAene,aAY1BV,KAGRqgB,KACA4B,KAGAxnB,KAGAujB,EAAYphB,EAAOohB,UAGnB/R,KAGAqT,EAAYngB,SAGZjP,GAASwa,WAET/B,GAAUc,UAEV7N,GAASsB,SACTsN,GAAStN,SAETqO,KAEAgN,GAAMrb,SACNqb,GAAM0C,mBACNqE,EAAYpiB,QAAQ,GACpBH,EAAYG,SACZiE,EAAavG,yBAGgB,IAAzBgC,EAAOtB,cACV6F,EAAa9E,oBAAqBqE,EAAc,CAAEpE,eAAe,IAGjE6E,EAAa/F,qBAAsBsF,GAGhCoK,GAASC,YACZD,GAASrQ,kBAeFmrB,GAAWhtB,EAAQ8H,GAE3B4e,EAAYtf,KAAMpH,GAClB+P,GAAU3I,KAAMpH,GAEhBuI,EAAaxI,KAAMC,GAEnB0mB,EAAYpiB,SACZqb,GAAMrb,kBAQEkjB,KAER9iB,KAAsBlK,SAASsW,IAE9BkW,EAAelW,EAAiB,WAAYtW,SAAS,CAAEuW,EAAerE,KAEjEA,EAAI,IACPqE,EAAchc,UAAUE,OAAQ,WAChC8b,EAAchc,UAAUE,OAAQ,QAChC8b,EAAchc,UAAUC,IAAK,UAC7B+b,EAAc7Q,aAAc,cAAe,wBAYtC+kB,GAASpK,EAASnW,MAE1BmW,EAAOrgB,SAAS,CAAEwF,EAAO3L,SAKpB44B,EAAcpS,EAAQrf,KAAKwf,MAAOxf,KAAK0xB,SAAWrS,EAAOtkB,SACzD02B,EAAYj3B,aAAegK,EAAMhK,YACpCgK,EAAMhK,WAAW2mB,aAAc3c,EAAOitB,OAInC/jB,EAAiBlJ,EAAMrL,iBAAkB,WACzCuU,EAAe3S,QAClB0uB,GAAS/b,eAoBHojB,GAAc93B,EAAUia,OAI5BoM,EAASmM,EAAeV,EAAIQ,QAAStyB,GACxC24B,EAAetS,EAAOtkB,OAEnB62B,EAAYhL,GAAMhe,mBAElB+oB,EAAe,CAGdnpB,EAAOghB,OACVvW,GAAS0e,GAEG,IACX1e,EAAQ0e,EAAe1e,GAKzBA,EAAQjT,KAAKE,IAAKF,KAAKC,IAAKgT,EAAO0e,EAAe,GAAK,OAElD,IAAI94B,EAAI,EAAGA,EAAI84B,EAAc94B,IAAM,KACnCiB,EAAUulB,EAAOxmB,GAEjBg5B,EAAUrpB,EAAOiE,MAAQ7C,GAAiB9P,GAG9CA,EAAQP,UAAUE,OAAQ,QAC1BK,EAAQP,UAAUE,OAAQ,WAC1BK,EAAQP,UAAUE,OAAQ,UAG1BK,EAAQ4K,aAAc,SAAU,IAChC5K,EAAQ4K,aAAc,cAAe,QAGjC5K,EAAQsM,cAAe,YAC1BtM,EAAQP,UAAUC,IAAK,SAIpBo4B,EACH93B,EAAQP,UAAUC,IAAK,WAIpBX,EAAIoa,GAEPnZ,EAAQP,UAAUC,IAAKq4B,EAAU,SAAW,QAExCrpB,EAAO+L,WAEViX,EAAe1xB,EAAS,aAAckF,SAASmW,IAC9CA,EAAS5b,UAAUC,IAAK,WACxB2b,EAAS5b,UAAUE,OAAQ,wBAIrBZ,EAAIoa,IAEZnZ,EAAQP,UAAUC,IAAKq4B,EAAU,OAAS,UAEtCrpB,EAAO+L,WAEViX,EAAe1xB,EAAS,qBAAsBkF,SAASmW,IACtDA,EAAS5b,UAAUE,OAAQ,UAAW,4BAMtC+K,EAAQ6a,EAAOpM,GACf6e,EAAattB,EAAMjL,UAAU8T,SAAU,WAG3C7I,EAAMjL,UAAUC,IAAK,WACrBgL,EAAMI,gBAAiB,UACvBJ,EAAMI,gBAAiB,eAElBktB,GAEJjxB,GAAc,CACb3G,OAAQsK,EACRjJ,KAAM,UACNya,SAAS,QAMP+b,EAAavtB,EAAMG,aAAc,cACjCotB,IACHxQ,EAAQA,EAAMlN,OAAQ0d,EAAW91B,MAAO,YAOzCgX,EAAQ,SAGFA,WAQCkE,SAMP6a,EACAC,EAHGxkB,EAAmBvE,KACtBgpB,EAAyBzkB,EAAiB1S,UAIvCm3B,QAA4C,IAAX3H,EAAyB,KAIzDF,EAAe3T,GAASC,WAAa,GAAKnO,EAAO6hB,aAIjD8B,IACH9B,EAAe3T,GAASC,WAAa,EAAInO,EAAO8hB,oBAI7C1D,GAAMhe,kBACTyhB,EAAerP,OAAOC,eAGlB,IAAIhK,EAAI,EAAGA,EAAIihB,EAAwBjhB,IAAM,KAC7CqE,EAAkB7H,EAAiBwD,GAEnCvD,EAAiB8d,EAAelW,EAAiB,WACpD6c,EAAuBzkB,EAAe3S,UAGvCi3B,EAAYhyB,KAAKmmB,KAAOoE,GAAU,GAAMtZ,IAAO,EAI3CzI,EAAOghB,OACVwI,EAAYhyB,KAAKmmB,MAASoE,GAAU,GAAMtZ,IAAQihB,EAAyB7H,KAAoB,GAI5F2H,EAAY3H,EACftd,EAAaxI,KAAM+Q,GAGnBvI,EAAazG,OAAQgP,GAGlB6c,EAAuB,KAEtBC,EAAKnC,GAA0B3a,OAE9B,IAAIpE,EAAI,EAAGA,EAAIihB,EAAsBjhB,IAAM,KAC3CqE,EAAgB7H,EAAewD,GAEnC+gB,EAAYhhB,KAAQsZ,GAAU,GAAMvqB,KAAKmmB,KAAOqE,GAAU,GAAMtZ,GAAMlR,KAAKmmB,IAAKjV,EAAIkhB,GAEhFJ,EAAYC,EAAY5H,EAC3Btd,EAAaxI,KAAMgR,GAGnBxI,EAAazG,OAAQiP,KAQrBoF,KACHmQ,EAAIQ,QAAQ/xB,UAAUC,IAAK,uBAG3BsxB,EAAIQ,QAAQ/xB,UAAUE,OAAQ,uBAI3BihB,KACHoQ,EAAIQ,QAAQ/xB,UAAUC,IAAK,yBAG3BsxB,EAAIQ,QAAQ/xB,UAAUE,OAAQ,mCAYxBib,IAAgBsR,iBAAEA,GAAmB,GAAU,QAEnDvY,EAAmBqd,EAAIQ,QAAQnyB,iBxBrrDK,mBwBsrDvCuU,EAAiBod,EAAIQ,QAAQnyB,iBxBrrDQ,mCwBurDlCwlB,EAAS,CACZ5D,KAAMwP,EAAS,EACfrP,MAAOqP,EAAS9c,EAAiB1S,OAAS,EAC1CogB,GAAIqP,EAAS,EACbpP,KAAMoP,EAAS9c,EAAe3S,OAAS,MAKpCyN,EAAOghB,OACN/b,EAAiB1S,OAAS,IAC7B4jB,EAAO5D,MAAO,EACd4D,EAAOzD,OAAQ,GAGZxN,EAAe3S,OAAS,IAC3B4jB,EAAOxD,IAAK,EACZwD,EAAOvD,MAAO,IAIX3N,EAAiB1S,OAAS,GAA+B,WAA1ByN,EAAO8P,iBAC1CqG,EAAOzD,MAAQyD,EAAOzD,OAASyD,EAAOvD,KACtCuD,EAAO5D,KAAO4D,EAAO5D,MAAQ4D,EAAOxD,KAMZ,IAArB6K,EAA4B,KAC3BqM,EAAiB9d,GAAUG,kBAC/BiK,EAAO5D,KAAO4D,EAAO5D,MAAQsX,EAAezd,KAC5C+J,EAAOxD,GAAKwD,EAAOxD,IAAMkX,EAAezd,KACxC+J,EAAOvD,KAAOuD,EAAOvD,MAAQiX,EAAexd,KAC5C8J,EAAOzD,MAAQyD,EAAOzD,OAASmX,EAAexd,QAI3CrM,EAAOiE,IAAM,KACZsO,EAAO4D,EAAO5D,KAClB4D,EAAO5D,KAAO4D,EAAOzD,MACrByD,EAAOzD,MAAQH,SAGT4D,WAYCrV,GAAmB9E,EAAQ8H,OAE/BmB,EAAmBvE,KAGnBopB,EAAY,EAGhBC,EAAU,IAAK,IAAI15B,EAAI,EAAGA,EAAI4U,EAAiB1S,OAAQlC,IAAM,KAExDyc,EAAkB7H,EAAiB5U,GACnC6U,EAAiB4H,EAAgBnc,iBAAkB,eAElD,IAAIk4B,EAAI,EAAGA,EAAI3jB,EAAe3S,OAAQs2B,IAAM,IAG5C3jB,EAAe2jB,KAAO7sB,QACnB+tB,EAIsC,cAAzC7kB,EAAe2jB,GAAGjoB,QAAQC,YAC7BipB,OAMEhd,IAAoB9Q,SAM8B,IAAlD8Q,EAAgB/b,UAAU8T,SAAU,UAA8D,cAAvCiI,EAAgBlM,QAAQC,YACtFipB,WAKKA,WAUCnT,SAGJqT,EAAajpB,KACb+oB,EAAYhpB,QAEZgD,EAAe,KAEdmmB,EAAenmB,EAAanT,iBAAkB,gBAI9Cs5B,EAAa13B,OAAS,EAAI,KAKzB23B,EAAiB,GAGrBJ,GAPuBhmB,EAAanT,iBAAkB,qBAOtB4B,OAAS03B,EAAa13B,OAAW23B,UAK5D1yB,KAAKC,IAAKqyB,GAAcE,EAAa,GAAK,YAczC/oB,GAAYjF,OAKnB5F,EAFG8K,EAAI6gB,EACP1gB,EAAI2gB,KAIDhmB,EAAQ,KACPmuB,EAAa/oB,GAAiBpF,GAC9BwG,EAAS2nB,EAAanuB,EAAMhK,WAAagK,EAGzCiJ,EAAmBvE,KAGvBQ,EAAI1J,KAAKE,IAAKuN,EAAiB1G,QAASiE,GAAU,GAGlDnB,OAAInG,EAGAivB,IACH9oB,EAAI7J,KAAKE,IAAKsrB,EAAehnB,EAAMhK,WAAY,WAAYuM,QAASvC,GAAS,QAI1EA,GAAS8H,EAAe,IACTA,EAAanT,iBAAkB,aAAc4B,OAAS,EACtD,KACd6a,EAAkBtJ,EAAalG,cAAe,qBAEjDxH,EADGgX,GAAmBA,EAAgBtR,aAAc,uBAChDiG,SAAUqL,EAAgBjR,aAAc,uBAAyB,IAGjE2H,EAAanT,iBAAkB,qBAAsB4B,OAAS,SAK9D,CAAE2O,EAAAA,EAAGG,EAAAA,EAAGjL,EAAAA,YAOPiQ,YAED2c,EAAeV,EAAIQ,QAASsH,2EAS3B1pB,YAEDsiB,EAAeV,EAAIQ,QxBr4Dc,4BwB44DhC3d,YAED6d,EAAeV,EAAIQ,QAAS,oCAO3B6F,YAED3F,EAAeV,EAAIQ,QAASuH,kCAO3BnY,YAEDxR,KAAsBnO,OAAS,WAM9B4f,YAEDhN,KAAoB5S,OAAS,WAQ5B+3B,YAEDjkB,KAAYzL,KAAKoB,QAEnBuuB,EAAa,OACZ,IAAIl6B,EAAI,EAAGA,EAAI2L,EAAMuuB,WAAWh4B,OAAQlC,IAAM,KAC9Cm6B,EAAYxuB,EAAMuuB,WAAYl6B,GAClCk6B,EAAYC,EAAUvW,MAASuW,EAAU15B,aAEnCy5B,cAWAxpB,YAEDsF,KAAY9T,gBASXk4B,GAAUhiB,EAAGC,OAEjBoE,EAAkBpM,KAAuB+H,GACzCvD,EAAiB4H,GAAmBA,EAAgBnc,iBAAkB,kBAEtEuU,GAAkBA,EAAe3S,QAAuB,iBAANmW,EAC9CxD,EAAiBA,EAAgBwD,QAAMxN,EAGxC4R,WAeC/O,GAAoB0K,EAAGC,OAE3B1M,EAAqB,iBAANyM,EAAiBgiB,GAAUhiB,EAAGC,GAAMD,KACnDzM,SACIA,EAAMQ,gCAcNypB,SAEJjlB,EAAUC,WAEP,CACN8gB,OAAQ/gB,EAAQE,EAChB8gB,OAAQhhB,EAAQK,EAChBqpB,OAAQ1pB,EAAQ5K,EAChBu0B,OAAQ3Y,KACR9D,SAAUA,GAASC,qBAWZyc,GAAU7R,MAEG,iBAAVA,EAAqB,CAC/B/c,GAAOgnB,EAAkBjK,EAAMgJ,QAAUiB,EAAkBjK,EAAMiJ,QAAUgB,EAAkBjK,EAAM2R,aAE/FG,EAAa7H,EAAkBjK,EAAM4R,QACxCG,EAAe9H,EAAkBjK,EAAM7K,UAEd,kBAAf2c,GAA4BA,IAAe7Y,MACrDa,GAAagY,GAGc,kBAAjBC,GAA8BA,IAAiB5c,GAASC,YAClED,GAASoB,OAAQwb,aASXzb,QAERjB,KAEItK,IAAqC,IAArB9D,EAAOohB,UAAsB,KAE5CzU,EAAW7I,EAAalG,cAAe,qBAItC+O,IAAWA,EAAW7I,EAAalG,cAAe,kBAEnDmtB,EAAoBpe,EAAWA,EAASxQ,aAAc,kBAAqB,KAC3E6uB,EAAkBlnB,EAAa9R,WAAa8R,EAAa9R,WAAWmK,aAAc,kBAAqB,KACvG8uB,EAAiBnnB,EAAa3H,aAAc,kBAO5C4uB,EACH3J,EAAYrf,SAAUgpB,EAAmB,IAEjCE,EACR7J,EAAYrf,SAAUkpB,EAAgB,IAE9BD,EACR5J,EAAYrf,SAAUipB,EAAiB,KAGvC5J,EAAYphB,EAAOohB,UAOyC,IAAxDtd,EAAanT,iBAAkB,aAAc4B,QAChDywB,EAAelf,EAAc,gBAAiBtN,SAASjG,IAClDA,EAAGuL,aAAc,kBAChBslB,GAA4B,IAAd7wB,EAAG4W,SAAkB5W,EAAG26B,aAAiB9J,IAC1DA,EAA4B,IAAd7wB,EAAG4W,SAAkB5W,EAAG26B,aAAiB,UAaxD9J,GAAcqB,GAAoBzQ,MAAe9D,GAASC,YAAiB2Z,OAAiB/b,GAAUG,kBAAkBG,OAAwB,IAAhBrM,EAAOghB,OAC1IuB,EAAmB1oB,YAAY,KACQ,mBAA3BmG,EAAOqhB,gBACjBrhB,EAAOqhB,kBAGP8J,KAED9b,OACE+R,GACHoB,EAAqBzK,KAAKC,OAGvBkK,GACHA,EAAgBhD,YAAkC,IAAtBqD,aAUtBnU,KAERxU,aAAc2oB,GACdA,GAAoB,WAIZ0F,KAEJ7G,IAAcqB,IACjBA,GAAkB,EAClBpqB,GAAc,CAAEtF,KAAM,oBACtB6G,aAAc2oB,GAEVL,GACHA,EAAgBhD,YAAY,aAMtB8I,KAEJ5G,GAAaqB,IAChBA,GAAkB,EAClBpqB,GAAc,CAAEtF,KAAM,qBACtBsc,eAKO+b,KAERhJ,EAAkB7L,0BAA2B,EAGzCvW,EAAOiE,KACJiK,GAASC,aAAmC,IAArBpC,GAAUM,SAAsBH,KAAkBqG,MAC9EvW,GAAO+lB,EAAS,EAA6B,SAA1B/hB,EAAO8P,eAA4BkS,OAAS9mB,IAItDgT,GAASC,aAAmC,IAArBpC,GAAUK,SAAsBF,KAAkBqG,MACnFvW,GAAO+lB,EAAS,EAA6B,SAA1B/hB,EAAO8P,eAA4BkS,OAAS9mB,YAKxDmwB,KAERjJ,EAAkB7L,0BAA2B,EAGzCvW,EAAOiE,KACJiK,GAASC,aAAmC,IAArBpC,GAAUK,SAAsBF,KAAkBwG,OAC9E1W,GAAO+lB,EAAS,EAA6B,SAA1B/hB,EAAO8P,eAA4BkS,OAAS9mB,IAItDgT,GAASC,aAAmC,IAArBpC,GAAUM,SAAsBH,KAAkBwG,OACnF1W,GAAO+lB,EAAS,EAA6B,SAA1B/hB,EAAO8P,eAA4BkS,OAAS9mB,YAKxDowB,MAGFpd,GAASC,aAAmC,IAArBpC,GAAUK,SAAsBF,KAAkByG,IAC9E3W,GAAO+lB,EAAQC,EAAS,YAKjBuJ,KAERnJ,EAAkB9L,wBAAyB,GAGrCpI,GAASC,aAAmC,IAArBpC,GAAUM,SAAsBH,KAAkB0G,MAC9E5W,GAAO+lB,EAAQC,EAAS,YAWjBwJ,SAGiB,IAArBzf,GAAUK,UACTF,KAAkByG,GACrB2Y,SAEI,KAEArJ,KAGHA,EADGjiB,EAAOiE,IACM+e,EAAeV,EAAIQ,QAASuH,0BAAyC12B,MAGrEqvB,EAAeV,EAAIQ,QAASuH,wBAAuC12B,MAGhFsuB,EAAgB,KACf5gB,EAAM4gB,EAActxB,iBAAkB,WAAY4B,OAAS,QAAO2I,EAEtEc,GADQ+lB,EAAS,EACP1gB,cAUL8pB,QAER/I,EAAkB7L,0BAA2B,EAC7C6L,EAAkB9L,wBAAyB,GAGlB,IAArBvK,GAAUM,OAAmB,KAE5B8J,EAASjK,KAKTiK,EAAOvD,MAAQuD,EAAOzD,OAAS1S,EAAOghB,MAAQ2G,OACjDxR,EAAOvD,MAAO,GAGXuD,EAAOvD,KACV2Y,KAEQvrB,EAAOiE,IACfmnB,KAGAC,eAiBMpa,GAAa9R,GAEjBa,EAAOwT,oBACVyU,cAUO1C,GAAiBpmB,GAEN,YAAfuiB,GAA4B,YAAYltB,KAAM2K,EAAMzN,OAAOkZ,YAC9D8W,EAAa,OACbrpB,GAAc,CACbtF,KAAM,qBACNsQ,KAAM,CAAE0e,OAAAA,EAAQC,OAAAA,EAAQC,cAAAA,EAAene,aAAAA,eAWjCwhB,GAAgBnmB,GAExBtB,cASQ2nB,GAAwBrmB,IAIR,IAApBzM,SAASwa,QAAoBxa,SAASye,gBAAkBze,SAASmoB,OAEzB,mBAAhCnoB,SAASye,cAAc8M,MACjCvrB,SAASye,cAAc8M,OAExBvrB,SAASmoB,KAAKqD,kBAWPiI,GAAsBhnB,MAE1BA,EAAMssB,eAAiBtsB,EAAMssB,cAAc3vB,aAAc,QAAW,KACnEwF,EAAMnC,EAAMssB,cAActvB,aAAc,QACxCmF,IACH8kB,GAAa9kB,GACbnC,EAAMqQ,4BAWA4V,GAAwBjmB,GAG5B2oB,OAAiC,IAAhB9nB,EAAOghB,MAC3BhlB,GAAO,EAAG,GACVgsB,MAGQvF,EACRuF,KAIAC,WAWIyD,GAAM,CACXC,QAl2EqB,QAo2ErB/I,WAAAA,GACA7iB,UAAAA,GAEAqD,KAAAA,GACA4lB,UAAAA,GACA4C,cAAe7f,GAAU3I,KAAK3H,KAAMsQ,IAGpC/P,MAAAA,GACAuW,KAAM6Y,GACN1Y,MAAO2Y,GACP1Y,GAAI2Y,GACJ1Y,KAAM2Y,GACNnf,KAAMof,GACNnf,KAAM8e,GAGNC,aAAAA,GAAcC,cAAAA,GAAeC,WAAAA,GAAYC,aAAAA,GAAcC,aAAAA,GAAcL,aAAAA,GAGrEU,iBAAkB9f,GAAU0B,KAAKhS,KAAMsQ,IACvC+f,aAAc/f,GAAUK,KAAK3Q,KAAMsQ,IACnCggB,aAAchgB,GAAUM,KAAK5Q,KAAMsQ,IAGnCyU,GAAAA,GACAE,IAAAA,GAGAzhB,iBAAkBuhB,GAClBthB,oBAAqBwhB,GAGrB7iB,OAAAA,GAGAojB,QAAAA,GAGA/U,gBAAAA,GAGA8f,mBAAoBjgB,GAAUG,gBAAgBzQ,KAAMsQ,IAGpD6E,WAAAA,GAGAqb,eAAgB/d,GAASoB,OAAO7T,KAAMyS,IAGtC2E,YAAAA,GAGAY,gBAAAA,GAGAoU,aAAAA,GACAC,YAAAA,GACAH,oBAAAA,GACAvmB,gBAAAA,GAGA4Q,SAAAA,GACAhB,cAAAA,GACA7T,eAAgBwe,GAAM4C,qBAAqB9iB,KAAMkgB,IACjDuQ,WAAYhe,GAASC,SAAS1S,KAAMyS,IACpC4C,UAAWoN,GAAMpN,UAAUrV,KAAMyiB,IACjC9d,cAAege,GAAMhe,cAAc3E,KAAM2iB,IAGzC0G,QAAS,IAAM3C,EAGfgK,UAAW5nB,EAAaxI,KAAKN,KAAM8I,GACnC6nB,YAAa7nB,EAAazG,OAAOrC,KAAM8I,GAGvC6hB,YAAAA,GACAiG,YAAa3Y,GAGb2R,kBAAAA,GACA5B,qBAAAA,GACAprB,cAAAA,GAGA4tB,SAAAA,GACA2E,SAAAA,GAGAjU,YAAAA,GAGA1V,WAAAA,GAIAqpB,oBAAAA,GAGAxpB,kBAAAA,GAGAC,eAAAA,GAGA0pB,SAAAA,GAGA6B,iBAAkB,IAAMrK,EAGxBzhB,gBAAiB,IAAMsD,EAGvB/F,mBAAAA,GAGA6d,cAAeD,GAAMC,cAAcngB,KAAMkgB,IAGzCtV,UAAAA,GAGA3F,oBAAAA,GACAyE,kBAAAA,GAIA+M,oBAAAA,GACAC,kBAAAA,GAGAoE,yBAA0B,IAAM6L,EAAkB7L,yBAClDD,uBAAwB,IAAM8L,EAAkB9L,uBAGhDtG,cAAe+B,GAAS/B,cAAcvU,KAAMsW,IAC5C1B,iBAAkB0B,GAAS1B,iBAAiB5U,KAAMsW,IAGlDzB,WAAYyB,GAASzB,WAAW7U,KAAMsW,IAGtCxB,yBAA0BwB,GAASxB,yBAAyB9U,KAAMsW,IAElEvD,qBAAAA,GAGAjG,SAAU,IAAMF,EAGhBzM,UAAW,IAAMoE,EAGjB5M,aAAc4vB,EAGdljB,iBAAkB,IAAMuV,EACxBhX,iBAAkB,IAAMikB,EAAIzL,OAC5BtD,mBAAoB,IAAM+O,EAAIa,SAC9B9U,sBAAuB,IAAMqU,EAAYpxB,QAGzC8nB,eAAgBF,GAAQE,eAAe3d,KAAMyd,IAC7CoB,UAAWpB,GAAQoB,UAAU7e,KAAMyd,IACnCqB,UAAWrB,GAAQqB,UAAU9e,KAAMyd,IACnCqT,WAAYrT,GAAQsB,qBAAqB/e,KAAMyd,YAKhD8J,EAAa1nB,EAAQ,IACjBowB,GAGHpe,eAAAA,GACAC,cAAAA,GAGA6Q,MAAAA,GACAF,MAAAA,GACAtQ,SAAAA,GACA5O,SAAAA,GACA1L,SAAAA,GACA4a,SAAAA,GACAnC,UAAAA,GACAxH,aAAAA,EACApE,YAAAA,EAEA8Q,YAAAA,GACAyC,aAAAA,GACA/E,uBAAAA,GACAmM,oBAAAA,GACA3L,gBAAAA,GACAE,aAAAA,GACAjB,gBAAAA,KAGMsd,OC5jFJpwB,EAASkxB,EAeTC,EAAmB,GAEvBnxB,EAAOsnB,WAAanoB,IAGnB3F,OAAOI,OAAQoG,EAAQ,IAAIkxB,EAAM95B,SAASkL,cAAe,WAAanD,IAGtEgyB,EAAiB7xB,KAAKT,GAAUA,EAAQmB,KAEjCA,EAAOsnB,cAUf,CAAE,YAAa,KAAM,MAAO,mBAAoB,sBAAuB,kBAAmBpsB,SAAS2D,IAClGmB,EAAOnB,GAAU,IAAKyqB,KACrB6H,EAAiB3xB,MAAM4xB,GAAQA,EAAKvyB,GAAQrI,KAAM,QAAS8yB,SAI7DtpB,EAAOwpB,QAAU,KAAM,EAEvBxpB,EAAOqwB,QD3BgB"}